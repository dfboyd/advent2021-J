   
readfile =: 1!:1

         
t =: readfile < jpath '~/Downloads.input04.txt'

   |file name error: readfile
|   t=:    readfile<jpath'~/Downloads.input04.txt'
      
t =: readfile < jpath '~/Downloads/input04.txt'

         
   t
7,4,9,5,11,17,23,2,0,14,21,24,10,16,13,6,15,25,12,22,18,20,8,19,3,26,1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   $ t
298
   ": '123'
123
   ": '123 0x14'
123 0x14
   ". '123 0x14'
123 0
   ". '123 0 14'
123 0 14
   $ ". '123 0 14'
3
   $ ". '123,0,14'
3
   ". '123,0,14'
123 0 14
   ". t
|spelling error
|   7,4,9,5,11,17,23,2,0,14,21,24,10,16,13,6,15,25,12,22,18,20,8,19,3,26,1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
|                                                                         ^
|       ".t
   ". , t
|spelling error
|   7,4,9,5,11,17,23,2,0,14,21,24,10,16,13,6,15,25,12,22,18,20,8,19,3,26,1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
|                                                                         ^
|       ".,t
   ". '7,4,9,5,11,17,23,2,0,14,21,24,10,16,13,6,15,25,12,22,18,20,8,19,3,26,1'
7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1
   $ t
298
   ". t
|spelling error
|   7,4,9,5,11,17,23,2,0,14,21,24,10,16,13,6,15,25,12,22,18,20,8,19,3,26,1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
|                                                                         ^
|       ".t
   ": t
7,4,9,5,11,17,23,2,0,14,21,24,10,16,13,6,15,25,12,22,18,20,8,19,3,26,1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   ',' = t
0 1 0 1 0 1 0 1 0 0 1 0 0 1 0 0 1 0 1 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 1 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...
   ' ' (',' = t) } t
  4,9,5,11,17,23,2,0,14,21,24,10,16,13,6,15,25,12,22,18,20,8,19,3,26,1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   'X' (',' = t) } t
XX4,9,5,11,17,23,2,0,14,21,24,10,16,13,6,15,25,12,22,18,20,8,19,3,26,1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   t
7,4,9,5,11,17,23,2,0,14,21,24,10,16,13,6,15,25,12,22,18,20,8,19,3,26,1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   'X' (',' = t $ i. # t) } t
|domain error
|   'X'(','=t    $i.#t)}t
   i. # t
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88...
   (',' = t) $ (i. # t)
   (',' = t) # (i. # t)
1 3 5 7 10 13 16 18 20 23 26 29 32 35 38 40 43 46 49 52 55 58 60 63 65 68
   ' ' ((',' = t) # (i. # t)) } t
7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   ' ' ((',' = t) # (i. # t)) } t
eliminatecommas =: 3 : 0
  ' ' ((',' = y) # (i. # y)) } y
)


7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
            ' ' ((',' = t) # (i. # t)) } t
eliminatecommas =: 3 : 0
  ' ' ((',' = y) # (i. # y)) } y
)

eliminatecommas t
7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
         7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   ' ' ((',' = t) # (i. # t)) } t
eliminatecommas =: 3 : 0
  ' ' ((',' = y) # (i. # y)) } y
)

tt =. eliminatecommas t
7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
            tt
7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   ". tt
|spelling error
|   7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
|                                                                         ^
|       ".tt
   ": tt
7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   ". , tt
|spelling error
|   7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
|                                                                         ^
|       ".,tt
   t
7,4,9,5,11,17,23,2,0,14,21,24,10,16,13,6,15,25,12,22,18,20,8,19,3,26,1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   tt
7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   ". tt
|spelling error
|   7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
|                                                                         ^
|       ".tt
   $ ". tt
|spelling error
|   7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
|                                                                         ^
|   $    ".tt
   ". '7 4 9 5 11'
7 4 9 5 11
   tt
eliminateLF =: 3 : 0
  ' ' ((LF = y) # (i. # y)) } y
)


7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
            eliminateLF tt
7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1  22 13 17 11  0  8  2 23  4 24 21  9 14 16  7  6 10  3 18  5  1 12 20 15 19   3 15  0  2 22  9 18 13 17  5 19  8  7 25 23 20 11 10 24  4 14 21 16 12  6  14 21 17 24  4 10 16 15  9 19 18...
   ". eliminateLF tt
7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1 22 13 17 11 0 8 2 23 4 24 21 9 14 16 7 6 10 3 18 5 1 12 20 15 19 3 15 0 2 22 9 18 13 17 5 19 8 7 25 23 20 11 10 24 4 14 21 16 12 6 14 21 17 24 4 10 16 15 9 19 18 8 23 26 20 22 11 13 6 5...
   n =. eliminateLF eliminatecommas t
   n
7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1  22 13 17 11  0  8  2 23  4 24 21  9 14 16  7  6 10  3 18  5  1 12 20 15 19   3 15  0  2 22  9 18 13 17  5 19  8  7 25 23 20 11 10 24  4 14 21 16 12  6  14 21 17 24  4 10 16 15  9 19 18...
   $ n
298
   :f 298
|syntax error
|        :f 298
   p: 298
1979
   p. 298
|domain error
|       p.298
   n =. ". eliminateLF eliminatecommas t
   n
7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1 22 13 17 11 0 8 2 23 4 24 21 9 14 16 7 6 10 3 18 5 1 12 20 15 19 3 15 0 2 22 9 18 13 17 5 19 8 7 25 23 20 11 10 24 4 14 21 16 12 6 14 21 17 24 4 10 16 15 9 19 18 8 23 26 20 22 11 13 6 5...
   $n
102
   102 % 4
25.5
   4 5 5 $ n
 7  4  9  5 11
17 23  2  0 14
21 24 10 16 13
 6 15 25 12 22
18 20  8 19  3

26  1 22 13 17
11  0  8  2 23
 4 24 21  9 14
16  7  6 10  3
18  5  1 12 20

15 19  3 15  0
 2 22  9 18 13
17  5 19  8  7
25 23 20 11 10
24  4 14 21 16

12  6 14 21 17
24  4 10 16 15
 9 19 18  8 23
26 20 22 11 13
 6  5  2  0 12
   t
7,4,9,5,11,17,23,2,0,14,21,24,10,16,13,6,15,25,12,22,18,20,8,19,3,26,1

22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   NL E. t
|domain error
|   NL     E.t
   LF E. t
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 ...
   LF I.@E. t
70 71 86 101 116 131 146 147 162 177 192 207 222 223 238 253 268 283
   {. LF I.@E. t
70
   ({. LF I.@E. t) {. t
7,4,9,5,11,17,23,2,0,14,21,24,10,16,13,6,15,25,12,22,18,20,8,19,3,26,1
   
getfirstline =: 3 : '({. LF I.@E. y) {. y'

         getfirstline t
7,4,9,5,11,17,23,2,0,14,21,24,10,16,13,6,15,25,12,22,18,20,8,19,3,26,1
   eliminatecommas getfirstline t
7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1
   ". eliminatecommas getfirstline t
7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1
   +/ ". eliminatecommas getfirstline t
351
   ". eliminatecommas getfirstline t
draws =: 3 : '". eliminatecommas getfirstline y'

7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1
  ({. LF I.@E. t) }. t


22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   sliminateLF  ({. LF I.@E. t) }. t
|value error: sliminateLF
|       sliminateLF({.LF I.@E.t)}.t
   eliminateLF  ({. LF I.@E. t) }. t
  22 13 17 11  0  8  2 23  4 24 21  9 14 16  7  6 10  3 18  5  1 12 20 15 19   3 15  0  2 22  9 18 13 17  5 19  8  7 25 23 20 11 10 24  4 14 21 16 12  6  14 21 17 24  4 10 16 15  9 19 18  8 23 26 20 22 11 13  6  5  2  0 12  3  7
   ". eliminateLF  ({. LF I.@E. t) }. t
22 13 17 11 0 8 2 23 4 24 21 9 14 16 7 6 10 3 18 5 1 12 20 15 19 3 15 0 2 22 9 18 13 17 5 19 8 7 25 23 20 11 10 24 4 14 21 16 12 6 14 21 17 24 4 10 16 15 9 19 18 8 23 26 20 22 11 13 6 5 2 0 12 3 7
   $ ". eliminateLF  ({. LF I.@E. t) }. t
75
   3 5 5 $ $ ". eliminateLF  ({. LF I.@E. t) }. t
75 75 75 75 75
75 75 75 75 75
75 75 75 75 75
75 75 75 75 75
75 75 75 75 75

75 75 75 75 75
75 75 75 75 75
75 75 75 75 75
75 75 75 75 75
75 75 75 75 75

75 75 75 75 75
75 75 75 75 75
75 75 75 75 75
75 75 75 75 75
75 75 75 75 75
   3 5 5 $ ". eliminateLF  ({. LF I.@E. t) }. t
22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   
boards =: 3 : 0
  restN =. ". eliminateLF getrest y
  ((25 %~ # restN), 5 5) $ restN
)


            
   boards t
|value error: getrest
|   restN=.".eliminateLF     getrest y
   getrest t
|value error: getrest
|       getrest t
   
getrest =: 3 : '({. LF I.@E. y) }. y'

         
draws =: 3 : '". eliminatecommas getfirstline y'

         boards t
22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   $ boards t
3 5 5
   b =: boards t
   d =: draws t
   d
7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1
   b
22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   d ="0 1 b
|length error
|   d    ="0 1 b
   d =/"0 1 b
|length error
|   d    =/"0 1 b
   d =\"0 1 b
|length error
|   d    =\"0 1 b
   d =/ b
...
0 1 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 1 0 0
0 0 0 0 0
0 0 0 0 0
1 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 1 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 1 0 0
0 0 0 0 0
0 1 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 1 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 1 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 1 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
1 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 1
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 1 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 1 0
0 1 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 1 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 1 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 1 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 1 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 1 0 0
1 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 1
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
1 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 1 0
0 0 0 0 0
0 0 0 0 0
0 1 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
1 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 1 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
1 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 1
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
1 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 1 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 1 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 1
0 0 0 0 0
0 0 0 0 0
1 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 1
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 1 0 0
0 0 0 0 0
1 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 1 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 1 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
1 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
   $ d =/ b
27 3 5 5
   $ b
3 5 5
   7 = b
0 0 0 0 0
0 0 0 0 0
0 0 0 0 1
0 0 0 0 0
0 0 0 0 0

0 0 0 0 0
0 0 0 0 0
0 0 1 0 0
0 0 0 0 0
0 0 0 0 0

0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 1
   (7 = b) *. 4 = b
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0

0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0

0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
   (7 = b) +. 4 = b
0 0 0 0 0
0 0 0 1 0
0 0 0 0 1
0 0 0 0 0
0 0 0 0 0

0 0 0 0 0
0 0 0 0 0
0 0 1 0 0
0 0 0 0 1
0 0 0 0 0

0 0 0 0 1
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 1
   dd =: 1 3 5
   bb =: ? 3 2 2 $ 6
   dd
1 3 5
   bb
1 1
5 4

2 5
3 4

3 2
3 1
   dd = bb
1 1
0 0

0 0
1 0

0 0
0 0
   dd =/ bb
1 1
0 0

0 0
0 0

0 0
0 1


0 0
0 0

0 0
1 0

1 0
1 0


0 0
1 0

0 1
0 0

0 0
0 0
   dd =/\ bb
1 1
5 4

2 5
3 4

3 2
3 1


0 0
0 0

0 0
0 0

0 0
0 0


0 0
0 0

0 0
0 0

0 0
0 0
   dd =/ bb
1 1
0 0

0 0
0 0

0 0
0 1


0 0
0 0

0 0
1 0

1 0
1 0


0 0
1 0

0 1
0 0

0 0
0 0
   +. / dd =/ bb
1 1
1 0

0 1
1 0

1 0
1 1
   +. /\ dd =/ bb
1 1
0 0

0 0
0 0

0 0
0 1


1 1
0 0

0 0
1 0

1 0
1 1


1 1
1 0

0 1
1 0

1 0
1 1
   +./\ d =/ b
...
0 1 0 0 1
0 0 0 0 0
0 0 1 1 0
1 0 0 1 1
0 0 1 0 1
0 1 1 1 1
1 1 0 0 0
1 1 1 1 1
1 0 0 1 0
0 0 1 0 0
0 1 0 0 1
1 1 0 0 1
0 0 1 1 1
0 1 1 1 1
1 1 1 1 1
0 1 0 0 1
0 0 0 0 0
0 0 1 1 0
1 0 0 1 1
0 0 1 0 1
0 1 1 1 1
1 1 1 0 0
1 1 1 1 1
1 1 0 1 0
0 0 1 0 0
0 1 0 0 1
1 1 0 0 1
0 1 1 1 1
0 1 1 1 1
1 1 1 1 1
0 1 0 0 1
0 0 0 0 0
0 0 1 1 0
1 0 1 1 1
0 0 1 0 1
0 1 1 1 1
1 1 1 0 0
1 1 1 1 1
1 1 0 1 0
0 0 1 0 0
0 1 1 0 1
1 1 0 0 1
0 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 0 0 1
0 0 0 0 0
0 0 1 1 0
1 0 1 1 1
0 0 1 0 1
0 1 1 1 1
1 1 1 0 1
1 1 1 1 1
1 1 0 1 0
0 0 1 0 0
0 1 1 1 1
1 1 0 0 1
0 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 0 0 1
0 0 0 1 0
0 1 1 1 0
1 0 1 1 1
0 0 1 0 1
0 1 1 1 1
1 1 1 0 1
1 1 1 1 1
1 1 1 1 0
0 0 1 0 0
0 1 1 1 1
1 1 0 0 1
0 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 0 0 1
0 0 0 1 0
0 1 1 1 0
1 0 1 1 1
0 0 1 1 1
0 1 1 1 1
1 1 1 0 1
1 1 1 1 1
1 1 1 1 0
0 0 1 0 0
0 1 1 1 1
1 1 0 0 1
0 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 0 0 1
0 1 0 1 0
0 1 1 1 0
1 0 1 1 1
0 0 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 0
0 0 1 0 0
0 1 1 1 1
1 1 1 0 1
1 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 0 0 1
0 1 0 1 0
0 1 1 1 1
1 0 1 1 1
0 0 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 0
0 0 1 0 0
1 1 1 1 1
1 1 1 0 1
1 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 0 1 1
0 1 0 1 0
0 1 1 1 1
1 1 1 1 1
0 0 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 0
1 0 1 0 0
1 1 1 1 1
1 1 1 0 1
1 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 0 1 1
0 1 1 1 0
0 1 1 1 1
1 1 1 1 1
0 0 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 0
1 0 1 0 1
1 1 1 1 1
1 1 1 0 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 0 1 1
0 1 1 1 0
0 1 1 1 1
1 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 0
1 1 1 0 1
1 1 1 1 1
1 1 1 0 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 0 1 1
0 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 0 1
1 1 1 1 1
1 1 1 0 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 0 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
   $ d
27
   $ dd
3
   $ b
3 5 5
   $ bb
3 2 2
   bb
1 1
5 4

2 5
3 4

3 2
3 1
   dd
1 3 5
   dd
1 3 5
   bb
1 1
5 4

2 5
3 4

3 2
3 1
   dd =/ bb
1 1
0 0

0 0
0 0

0 0
0 1


0 0
0 0

0 0
1 0

1 0
1 0


0 0
1 0

0 1
0 0

0 0
0 0
   +./\ dd =/ bb
1 1
0 0

0 0
0 0

0 0
0 1


1 1
0 0

0 0
1 0

1 0
1 1


1 1
1 0

0 1
1 0

1 0
1 1
   bb
1 1
5 4

2 5
3 4

3 2
3 1
   $ +./\ dd =/ bb
3 3 2 2
   $ +./\ d =/ b
27 3 5 5
   $ b
3 5 5
   $ +./\ (3 {. d) =/ b
3 3 5 5
   +./\ (3 {. d) =/ b
0 0 0 0 0
0 0 0 0 0
0 0 0 0 1
0 0 0 0 0
0 0 0 0 0

0 0 0 0 0
0 0 0 0 0
0 0 1 0 0
0 0 0 0 0
0 0 0 0 0

0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 1


0 0 0 0 0
0 0 0 1 0
0 0 0 0 1
0 0 0 0 0
0 0 0 0 0

0 0 0 0 0
0 0 0 0 0
0 0 1 0 0
0 0 0 0 1
0 0 0 0 0

0 0 0 0 1
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 1


0 0 0 0 0
0 0 0 1 0
0 1 0 0 1
0 0 0 0 0
0 0 0 0 0

0 0 0 0 0
1 0 0 0 0
0 0 1 0 0
0 0 0 0 1
0 0 0 0 0

0 0 0 0 1
0 0 0 1 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 1
   bs =: +./\ d =/ b
   +/"1 bs
0 0 1 0 0
0 0 1 0 0
0 0 0 0 1

0 1 1 0 0
0 0 1 1 0
1 0 0 0 1

0 1 2 0 0
0 1 1 1 0
1 1 0 0 1

0 1 2 1 0
0 2 1 1 0
1 1 0 1 1

1 1 2 1 0
0 2 1 2 0
1 1 0 2 1

2 1 2 1 0
0 3 1 2 0
2 1 0 2 1

2 2 2 1 0
0 3 2 2 0
2 1 1 2 1

2 3 2 1 0
1 3 2 2 0
2 1 1 2 2

3 3 2 1 0
2 3 2 2 0
2 1 1 2 3

3 3 3 1 0
2 3 2 2 1
3 1 1 2 3

3 3 4 1 0
2 3 2 2 2
4 1 1 2 3

3 4 4 1 0
2 3 2 3 2
5 1 1 2 3

3 4 4 2 0
2 3 2 4 2
5 2 1 2 3

3 4 5 2 0
2 3 2 4 3
5 3 1 2 3

4 4 5 2 0
2 4 2 4 3
5 3 1 3 3

4 4 5 3 0
2 4 2 4 4
5 3 1 4 3

4 4 5 3 1
3 4 2 4 4
5 4 1 4 3

4 4 5 3 1
3 4 3 4 4
5 4 1 4 3

4 4 5 3 2
3 4 3 4 5
5 4 1 4 4

5 4 5 3 2
4 4 3 4 5
5 4 1 5 4

5 4 5 4 2
4 5 3 4 5
5 4 2 5 4

5 4 5 4 3
4 5 3 5 5
5 4 3 5 4

5 5 5 4 3
4 5 4 5 5
5 4 4 5 4

5 5 5 4 4
4 5 5 5 5
5 5 4 5 4

5 5 5 5 4
5 5 5 5 5
5 5 4 5 5

5 5 5 5 4
5 5 5 5 5
5 5 5 5 5

5 5 5 5 5
5 5 5 5 5
5 5 5 5 5
   $ +/"1 bs
27 3 5
   $ +/"2 bs
27 3 5
   bs
...
0 1 0 0 1
0 0 0 0 0
0 0 1 1 0
1 0 0 1 1
0 0 1 0 1
0 1 1 1 1
1 1 0 0 0
1 1 1 1 1
1 0 0 1 0
0 0 1 0 0
0 1 0 0 1
1 1 0 0 1
0 0 1 1 1
0 1 1 1 1
1 1 1 1 1
0 1 0 0 1
0 0 0 0 0
0 0 1 1 0
1 0 0 1 1
0 0 1 0 1
0 1 1 1 1
1 1 1 0 0
1 1 1 1 1
1 1 0 1 0
0 0 1 0 0
0 1 0 0 1
1 1 0 0 1
0 1 1 1 1
0 1 1 1 1
1 1 1 1 1
0 1 0 0 1
0 0 0 0 0
0 0 1 1 0
1 0 1 1 1
0 0 1 0 1
0 1 1 1 1
1 1 1 0 0
1 1 1 1 1
1 1 0 1 0
0 0 1 0 0
0 1 1 0 1
1 1 0 0 1
0 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 0 0 1
0 0 0 0 0
0 0 1 1 0
1 0 1 1 1
0 0 1 0 1
0 1 1 1 1
1 1 1 0 1
1 1 1 1 1
1 1 0 1 0
0 0 1 0 0
0 1 1 1 1
1 1 0 0 1
0 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 0 0 1
0 0 0 1 0
0 1 1 1 0
1 0 1 1 1
0 0 1 0 1
0 1 1 1 1
1 1 1 0 1
1 1 1 1 1
1 1 1 1 0
0 0 1 0 0
0 1 1 1 1
1 1 0 0 1
0 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 0 0 1
0 0 0 1 0
0 1 1 1 0
1 0 1 1 1
0 0 1 1 1
0 1 1 1 1
1 1 1 0 1
1 1 1 1 1
1 1 1 1 0
0 0 1 0 0
0 1 1 1 1
1 1 0 0 1
0 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 0 0 1
0 1 0 1 0
0 1 1 1 0
1 0 1 1 1
0 0 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 0
0 0 1 0 0
0 1 1 1 1
1 1 1 0 1
1 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 0 0 1
0 1 0 1 0
0 1 1 1 1
1 0 1 1 1
0 0 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 0
0 0 1 0 0
1 1 1 1 1
1 1 1 0 1
1 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 0 1 1
0 1 0 1 0
0 1 1 1 1
1 1 1 1 1
0 0 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 0
1 0 1 0 0
1 1 1 1 1
1 1 1 0 1
1 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 0 1 1
0 1 1 1 0
0 1 1 1 1
1 1 1 1 1
0 0 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 0
1 0 1 0 1
1 1 1 1 1
1 1 1 0 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 0 1 1
0 1 1 1 0
0 1 1 1 1
1 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 0
1 1 1 0 1
1 1 1 1 1
1 1 1 0 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 0 1 1
0 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 0 1
1 1 1 1 1
1 1 1 0 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 0 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
0 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
   $ bs
27 3 5 5
   bbs =: +./\ dd =/ bb
   bbs
1 1
0 0

0 0
0 0

0 0
0 1


1 1
0 0

0 0
1 0

1 0
1 1


1 1
1 0

0 1
1 0

1 0
1 1
   +/"1 bbs
2 0
0 0
0 1

2 0
0 1
1 2

2 1
1 1
1 2
   2 e. +/"1 bbs
0
   2 E. +/"1 bbs
|rank error
|   2     E.+/"1 bbs
   2 = +/"1 bbs
1 0
0 0
0 0

1 0
0 0
0 1

1 0
0 0
0 1
   2 = +/"1 bbs
1 0
0 0
0 0

1 0
0 0
0 1

1 0
0 0
0 1
   2 = +/"2 bbs
0 0
0 0
0 0

0 0
0 0
1 0

1 0
0 0
1 0
   (2 = +/"2 bbs) +. (2 = +/"1 bbs)
1 0
0 0
0 0

1 0
0 0
1 1

1 0
0 0
1 1
   +./"1 (2 = +/"2 bbs) +. (2 = +/"1 bbs)
1 0 0
1 0 1
1 0 1
   +./"1 (*./"2 bbs) +. (*./"1 bbs)
1 0 0
1 0 1
1 0 1
   $ d
27
   $ b
3 5 5
   scoreup d play b
|value error: play
|   scoreup d     play b
   
play =: 4 : 0
  NB. generate "transcript" of the game, playing each number in turn,
  NB. size is (# draws) by (# boards) by 5x5

  NB. each successive cube is the stack of marked spots on boards
  NB. after each number is drawn
  +./\ x =/ y
)

scoreup =: 3 : 0
  NB. see which boards are winners, by finding complete rows and cols
  NB. call this on  (draws play boards)
  NB.  Old version:   +./"1 (5 = +/"2 y) +. (5 = +/"1 y)
  +./"1 (*./"2 y) +. (*./"1 y)
)

NB. boards are always 5x5, in the test and the live input



play =: 4 : 0
  NB. generate "transcript" of the game, playing each number in turn,
  NB. size is (# draws) by (# boards) by 5x5

  NB. each successive cube is the stack of marked spots on boards
  NB. after each number is drawn
  +./\ x =/ y
)

scoreup =:    3 : 0
  NB. see which boards are winners, by finding complete rows and cols
  NB. call this on  (draws play boards)
  NB.  Old version:   +./"1 (5 = +/"2 y) +. (5 = +/"1 y)
  +./"1 (*./"2 y) +. (*./"1 y)
)

NB. boards are always 5x5, in the test and the live input


                     scoreup d play b
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 1
0 0 1
1 0 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
   +./"1 scoreup d play b
0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
   -. +./"1 scoreup d play b
1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
   +/ -. +./"1 scoreup d play b
11
   11 {. draws
11 {. draws
   11 {. d
7 4 9 5 11 17 23 2 0 14 21
   12 {. d
7 4 9 5 11 17 23 2 0 14 21 24
   12 }. d
10 16 13 6 15 25 12 22 18 20 8 19 3 26 1
   11 { scoreup d play b
0 0 1
   1 I.@E. 11 { scoreup d play b
2
   11 { d
24
   11 {. d
7 4 9 5 11 17 23 2 0 14 21
   11 }. d
24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1
   11 { b
|index error
|   11    {b
   b
22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   
answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. find_winning_board scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  uncalled_numbers =. (e + 1) }. d

  winning_board_index =. 1 I.@E. e { transcript

  winning_board_index { b
)

         
   answer04a t
|value error: find_winning_board
|   e=.    find_winning_board scoreup transcript
   
find_winning_board =: 3 : 0
  NB. call on result of scoreup
  +/ -. *./"1 y
  NB. returns the step at which the first board won
)


            answer04a t
|rank error: answer04a
|   winning_board_index=.1     I.@E.e{transcript
   
answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. find_winning_board scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  uncalled_numbers =. (e + 1) }. d

)
answer04a t


      6 15 25 12 22 18 20 8 19 3 26 1
         
answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. find_winning_board scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  uncalled_numbers =. (e + 1) }. d
  
  e { transcript
)
answer04a t


      0 1 1 1 1
0 1 1 1 1
1 1 1 1 1
0 1 0 0 1
0 0 0 0 0

0 0 1 1 0
1 0 1 1 1
0 0 1 0 1
0 1 1 1 1
1 1 1 0 0

1 1 1 1 1
1 1 0 1 0
0 0 1 0 0
0 1 1 0 1
1 1 0 0 1
         
find_winning_step =: 3 : 0
  NB. call on result of scoreup
  +/ -. *./"1 y
  NB. returns the step at which the first board won
)

NB. boards are always 5x5, in the test and the live input

answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. find_winning_step scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  uncalled_numbers =. (e + 1) }. d
  
  e { transcript
)
answer04a t



find_winning_step =: 3 : 0
  NB. call on result of scoreup
  +/ -. *./"1 y
  NB. returns the step at which the first board won
)

NB. boards are always 5x5, in the test and the live input

answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. find_winning_step scoreup transcript
  NB. e is the (0-indexed) step    at which there was first a winning board.

  last_called_number =. e { d

  uncalled_numbers =. (e + 1) }. d
  
  e { transcript
)
answer04a t


               0 1 1 1 1
0 1 1 1 1
1 1 1 1 1
0 1 0 0 1
0 0 0 0 0

0 0 1 1 0
1 0 1 1 1
0 0 1 0 1
0 1 1 1 1
1 1 1 0 0

1 1 1 1 1
1 1 0 1 0
0 0 1 0 0
0 1 1 0 1
1 1 0 0 1
         
answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. find_winning_step scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  uncalled_numbers =. (e + 1) }. d
  
  scoreup transcript
)
answer04a t


      0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 1
0 0 1
1 0 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
         
answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. find_winning_step scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  uncalled_numbers =. (e + 1) }. d
  
  e { scoreup transcript
)
answer04a t


      1 1 1
         

answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. find_winning_step scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  uncalled_numbers =. (e + 1) }. d
  
  e
)
answer04a t




answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. find_winning_step scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  uncalled_numbers =.    (e + 1) }. d
  
  e
)
answer04a t


      14
         
answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  NB. e =.  +/ -. *./"1 scoreup transcript
  *./"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  NB. last_called_number =. e { d

  NB. uncalled_numbers =. (e + 1) }. d
  

)
answer04a t



answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  NB. e =.  +/ -. *./"1 scoreup transcript
  *./"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  NB. last_called_numbe   r =. e { d

  NB. uncalled_numbers =. (e + 1) }. d
  

)
answer04a t


   0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1
         
answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  NB. e =.  +/ -. *./"1 scoreup transcript
  +/ -. *./"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  NB. last_called_number =. e { d

  NB. uncalled_numbers =. (e + 1) }. d
  

)
answer04a t



answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  NB. e =.  +/ -. *./"1 scoreup transcript
  +/ -. *./"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  NB. last_ca   lled_number =. e { d

  NB. uncalled_numbers =. (e + 1) }. d
  

)
answer04a t


   14
         
answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  NB. e =.  +/ -. *./"1 scoreup transcript
  scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  NB. last_called_number =. e { d

  NB. uncalled_numbers =. (e + 1) }. d
  

)
answer04a t


      0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 1
0 0 1
1 0 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
         
answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  NB. e =.  +/ -. *./"1 scoreup transcript
  +/ -. +/"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  NB. last_called_number =. e { d

  NB. uncalled_numbers =. (e + 1) }. d
  

)
answer04a t



answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  NB. e =.  +/ -. *./"1 scoreup transcript
  +/ -. +/"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  NB. last_called_number =. e { d
   
  NB. uncalled_numbers =. (e + 1) }. d
  

)
answer04a t


   _16
         
answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  NB. e =.  +/ -. *./"1 scoreup transcript
  +/ -. +./"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  NB. last_called_number =. e { d

  NB. uncalled_numbers =. (e + 1) }. d
  

)
answer04a t


      11
         

answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. +/ -. +./"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  uncalled_numbers =. (e + 1) }. d

  last_called_number ; uncalled_numbers
  

)
answer04a t


         +--+----------------------------------------+
|24|10 16 13 6 15 25 12 22 18 20 8 19 3 26 1|
+--+----------------------------------------+
         d
7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1
   
answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. +/ -. +./"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  uncalled_numbers =. (e + 1) }. d

  e { scoreup transcript
  

)
answer04a t


      0 0 1
         

answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. +/ -. +./"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  uncalled_numbers =. (e + 1) }. d

  (e { scoreup transcript) # i. $ b
  

)
answer04a t


         50 51 52 53 54
55 56 57 58 59
60 61 62 63 64
65 66 67 68 69
70 71 72 73 74
         
answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. +/ -. +./"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  uncalled_numbers =. (e + 1) }. d

  1 I.@E. e { scoreup transcript
  

)
answer04a t


      2
         
answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. +/ -. +./"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  uncalled_numbers =. (e + 1) }. d

  winning_board_number =. 1 I.@E. e { scoreup transcript

  winning_board_contents =. winning_board_number { b
  

)
answer04a t



answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. +/ -. +./"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  uncalled_numbers =. (e + 1) }. d

  winning_board_number =. 1 I.@E. e { scoreup transcr   ipt

  winning_board_contents =. winning_board_number { b
  

)
answer04a t


   14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
         
   
answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. +/ -. +./"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  uncalled_numbers =. (e + 1) }. d

  winning_board_number =. 1 I.@E. e { scoreup transcript

  winning_board_contents =. winning_board_number { b
  

)
answer04a t


      14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
         
   answer04a t
14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   (answer04a t) e. 8 35 6 5
0 0 0 0 0
0 0 0 0 0
0 1 0 0 0
0 0 0 1 1
0 0 0 0 0
   (answer04a t) e. 8 23 6 5
0 0 0 0 0
0 0 0 0 0
0 1 1 0 0
0 0 0 1 1
0 0 0 0 0
   
answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. +/ -. +./"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  called_numbers =. (e + 1) { d

  winning_board_number =. 1 I.@E. e { scoreup transcript

  winning_board_contents =. winning_board_number { b
  
  winning_board_contents e. called_numbers
)
answer04a t


      0 0 0 0 0
1 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
         
answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. +/ -. +./"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  called_numbers =. (e + 1) {. d

  winning_board_number =. 1 I.@E. e { scoreup transcript

  winning_board_contents =. winning_board_number { b
  
  winning_board_contents e. called_numbers
)
answer04a t



answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. +/ -. +./"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  called_numbers =. (e + 1)    {. d

  winning_board_number =. 1 I.@E. e { scoreup transcript

  winning_board_contents =. winning_board_number { b
  
  winning_board_contents e. called_numbers
)
answer04a t


   1 1 1 1 1
0 0 0 1 0
0 0 1 0 0
0 1 0 0 1
1 1 0 0 1
         
answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. +/ -. +./"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  called_numbers =. (e + 1) {. d

  winning_board_number =. 1 I.@E. e { scoreup transcript

  winning_board_contents =. winning_board_number { b
  
  winning_board_contents * -. winning_board_contents e. called_numbers
)
answer04a t



answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. +/ -. +./"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  called_numbers =. (e + 1) {. d

  winning_board_number =. 1 I.@E. e { scoreup transcript

  winning_board_contents =. winning_board_number { b
  
  winning_board_contents * -. winning_board_contents e. called_numbers
   )
answer04a t


    0  0  0  0  0
10 16 15  0 19
18  8  0 26 20
22  0 13  6  0
 0  0 12  3  0
         
answer04a =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b
  e =. +/ -. +./"1 scoreup transcript
  NB. e is the (0-indexed) step at which there was first a winning board.

  last_called_number =. e { d

  called_numbers =. (e + 1) {. d

  winning_board_number =. 1 I.@E. e { scoreup transcript

  winning_board_contents =. winning_board_number { b
  
  unmarked =. winning_board_contents * -. winning_board_contents e. called_numbers
  unmarked_sum =. +/ , unmarked

  unmarked_sum * last_called_number
)
answer04a t


      4512
         
i =: readfile < jpath '~/Downloads/input04a.txt'

         answer04a i
21607
   21607
21607
   
answer04b =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b

  e =. +/ -. *./"1 scoreup transcript
  NB. e is the (0-indexed) first step at which all the boards are winning

  last_called_number =. e { d

  called_numbers =. (e + 1) {. d

  winning_board_number =. 1 I.@E. e { scoreup transcript

  winning_board_contents =. winning_board_number { b
  
  unmarked =. winning_board_contents * -. winning_board_contents e. called_numbers
  unmarked_sum =. +/ , unmarked

  unmarked_sum * last_called_number
)
answer04b t


      5473
         d =. draws t
   d
7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1
   b =. boards t
   b
22 13 17 11  0
 8  2 23  4 24
21  9 14 16  7
 6 10  3 18  5
 1 12 20 15 19

 3 15  0  2 22
 9 18 13 17  5
19  8  7 25 23
20 11 10 24  4
14 21 16 12  6

14 21 17 24  4
10 16 15  9 19
18  8 23 26 20
22 11 13  6  5
 2  0 12  3  7
   st =. scoreup d play b
   $ st
27 3
   st
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
0 0 1
0 0 1
1 0 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
   */"1 st
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1
   -. */"1 st
1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0
   +/ -. */"1 st
14
   d
7 4 9 5 11 17 23 2 0 14 21 24 10 16 13 6 15 25 12 22 18 20 8 19 3 26 1
   13 I.@E. d
14
   14 { d
13
   0 0 1 1 +: 1 0 1 0
0 1 0 0
   0 0 1 1 ^: 1 0 1 0
|rank error
|   0 0 1 1    ^:1 0 1 0
   0 0 1 1 ~: 1 0 1 0
1 0 0 1
   
answer04b =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b

  e =. +/ -. *./"1 scoreup transcript
  NB. e is the (0-indexed) first step at which all the boards are winning

  last_called_number =. e { d

  called_numbers =. (e + 1) {. d

  (e { scoreup transcript) ~: ((e - 1) { scoreup transcript)

  NB. winning_board_contents =. winning_board_number { b
  NB. 
  NB. unmarked =. winning_board_contents * -. winning_board_contents e. called_numbers
  NB. unmarked_sum =. +/ , unmarked
  NB. 
  NB. unmarked_sum * last_called_number
)
answer04b t



answer04b =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b

  e =. +/ -. *./"1 scoreup transcript
  NB. e is the (0-indexed) first step at which all the boards are winning

  last_called_number =. e { d

  called_numbers =. (e + 1) {. d

  (e { scoreup transcript) ~: ((e - 1) { scoreup transcript)

  NB. winning_board_contents =. winning_board_number { b
  NB. 
  NB. unmarked =. winning_board_contents * -. winning_board_contents e. called_numbers
  NB. unmarked_sum =. +/ , unmarked
     NB. 
  NB. unmarked_sum * last_called_number
)
answer04b t


   0 1 0
         
answer04b =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b

  e =. +/ -. *./"1 scoreup transcript
  NB. e is the (0-indexed) first step at which all the boards are winning

  last_called_number =. e { d

  called_numbers =. (e + 1) {. d

  1 I.@E. (e { scoreup transcript) ~: ((e - 1) { scoreup transcript)

  NB. winning_board_contents =. winning_board_number { b
  NB. 
  NB. unmarked =. winning_board_contents * -. winning_board_contents e. called_numbers
  NB. unmarked_sum =. +/ , unmarked
  NB. 
  NB. unmarked_sum * last_called_number
)
answer04b t



answer04b =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b

  e =. +/ -. *./"1 scoreup transcript
  NB. e is the (0-indexed) first step at which all the boards are winning

  last_called_number =. e { d

  called_numbers =. (e + 1) {. d

  1 I.@E. (e { scoreup transcript) ~: ((e - 1) { scoreup transcript)

     NB. winning_board_contents =. winning_board_number { b
  NB. 
  NB. unmarked =. winning_board_contents * -. winning_board_contents e. called_numbers
  NB. unmarked_sum =. +/ , unmarked
  NB. 
  NB. unmarked_sum * last_called_number
)
answer04b t


   1
         
answer04b =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b

  e =. +/ -. *./"1 scoreup transcript
  NB. e is the (0-indexed) first step at which all the boards are winning

  last_called_number =. e { d

  called_numbers =. (e + 1) {. d

  winning_board_number =. 1 I.@E. (e { scoreup transcript) ~: ((e - 1) { scoreup transcript)

  winning_board_contents =. winning_board_number { b
  
  unmarked =. winning_board_contents * -. winning_board_contents e. called_numbers
  unmarked_sum =. +/ , unmarked
  
  unmarked_sum * last_called_number
)
answer04b t



answer04b =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b

  e =. +/ -. *./"1 scoreup transcript
  NB. e is the (0-indexed) first step at which all the boards are winning

  last_called_number =. e { d

  called_numbers =. (e +    1) {. d

  winning_board_number =. 1 I.@E. (e { scoreup transcript) ~: ((e - 1) { scoreup transcript)

  winning_board_contents =. winning_board_number { b
  
  unmarked =. winning_board_contents * -. winning_board_contents e. called_numbers
  unmarked_sum =. +/ , unmarked
  
  unmarked_sum * last_called_number
)
answer04b t


   1924
         answer04b i
19012
   0 _1 + 14
14 13
   (0 _1 + 14) { i. 20
14 13
   
answer04b =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b

  e =. +/ -. *./"1 scoreup transcript
  NB. e is the (0-indexed) first step at which all the boards are winning

  last_called_number =. e { d

  called_numbers =. (e + 1) {. d

  NB. winning_board_number =. 1 I.@E. (e { scoreup transcript) ~: ((e - 1) { scoreup transcript)
  NB. winning_board_number =. 1 I.@E. ~:/ (_1 0 + e) { scoreup transcript

  winning_board_number =. 0 I.@E. e - 1 { scoreup transcript
  NB. to find the number of the last winning board,
  NB. row e of the scores is all 1s, so we want the location of the 0
  NB. in the previous row of the scores

  winning_board_contents =. winning_board_number { b
  
  unmarked =. winning_board_contents * -. winning_board_contents e. called_numbers
  unmarked_sum =. +/ , unmarked
  
  unmarked_sum * last_called_number
)
answer04b t



answer04b =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b

  e =. +/ -. *./"1 scoreup transcript
  NB. e is the (0-indexed) first step at which all the boards are winning

  last_called_number =. e { d

  called_numbers =. (e + 1) {. d

  NB. winning_board_number =. 1 I.@E. (e { scoreup transcript) ~: ((e - 1) { scoreup transcript)
  NB. winning_board_number =. 1 I.@E. ~:/ (_1 0 + e) { scoreup transcript

  winning_board_number =. 0 I.@E.    e - 1 { scoreup transcript
  NB. to find the number of the last winning board,
  NB. row e of the scores is all 1s, so we want the location of the 0
  NB. in the previous row of the scores

  winning_board_contents =. winning_board_number { b
  
  unmarked =. winning_board_contents * -. winning_board_contents e. called_numbers
  unmarked_sum =. +/ , unmarked
  
  unmarked_sum * last_called_number
)
answer04b t


   0
         
answer04b =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b

  e =. +/ -. *./"1 scoreup transcript
  NB. e is the (0-indexed) first step at which all the boards are winning

  last_called_number =. e { d

  called_numbers =. (e + 1) {. d

  NB. winning_board_number =. 1 I.@E. (e { scoreup transcript) ~: ((e - 1) { scoreup transcript)
  NB. winning_board_number =. 1 I.@E. ~:/ (_1 0 + e) { scoreup transcript

  winning_board_number =. 0 I.@E. (e - 1) { scoreup transcript
  NB. to find the number of the last winning board,
  NB. row e of the scores is all 1s, so we want the location of the 0
  NB. in the previous row of the scores

  winning_board_contents =. winning_board_number { b
  
  unmarked =. winning_board_contents * -. winning_board_contents e. called_numbers
  unmarked_sum =. +/ , unmarked
  
  unmarked_sum * last_called_number
)
answer04b t



answer04b =: 3 : 0
  d =. draws y
  b =. boards y
  transcript =. d play b

  e =. +/ -. *./"1 scoreup transcript
  NB. e is the (0-indexed) first step at which all the boards are winning

  last_called_number =. e { d

  called_numbers =. (e + 1) {. d

  NB. winning_board_number =. 1 I.@E. (e { scoreup transcript) ~: ((e - 1) { scoreup transcript)
  NB. winning_board_number =. 1 I.@E. ~:/ (_1 0 + e) { scoreup transcript

  winning_board_number =. 0 I.@E. (e - 1) { scoreup transcript
     NB. to find the number of the last winning board,
  NB. row e of the scores is all 1s, so we want the location of the 0
  NB. in the previous row of the scores

  winning_board_contents =. winning_board_number { b
  
  unmarked =. winning_board_contents * -. winning_board_contents e. called_numbers
  unmarked_sum =. +/ , unmarked
  
  unmarked_sum * last_called_number
)
answer04b t


   1924
         3 5 {. i. 10
|length error
|   3 5    {.i.10
   3 5 {./ i. 10
|length error
|   3 5    {./i.10
   3 5 {. each i. 10
|length error
|   3 5    {.each i.10
   3 5 {.&< i. 10
|domain error
|   3 5    {.&<i.10
   1 + each i. 10
+-+-+-+-+-+-+-+-+-+--+
|1|2|3|4|5|6|7|8|9|10|
+-+-+-+-+-+-+-+-+-+--+
   5 {. i. 10
0 1 2 3 4
   3 {. i. 10
0 1 2
   3 5 {./ i. 10
|length error
|   3 5    {./i.10
   3 5 {./ each i. 10
|length error
|   3 5    {./each i.10
   3 5 {.\ i. 10
0 1 2 3 4 5 6 7
0 1 2 3 4 5 0 0
   3 5 {\ i. 10
+---------+---------+---------+---------+---------+---------+-----+-----+
|0 1 2    |1 2 3    |2 3 4    |3 4 5    |4 5 6    |5 6 7    |6 7 8|7 8 9|
+---------+---------+---------+---------+---------+---------+-----+-----+
|0 1 2 3 4|1 2 3 4 5|2 3 4 5 6|3 4 5 6 7|4 5 6 7 8|5 6 7 8 9|     |     |
+---------+---------+---------+---------+---------+---------+-----+-----+
   3 5 {:\ i. 10
2 3 4 5 6 7 8 9
4 5 6 7 8 9 0 0
   3 5 {.\ i. 10
0 1 2 3 4 5 6 7
0 1 2 3 4 5 0 0
   i. 10
0 1 2 3 4 5 6 7 8 9
   3 5 }. \ i. 10
1 2 0 0
2 3 0 0
3 4 0 0
4 5 0 0
5 6 0 0
6 7 0 0
7 8 0 0
8 9 0 0

1 2 3 4
2 3 4 5
3 4 5 6
4 5 6 7
5 6 7 8
6 7 8 9
0 0 0 0
0 0 0 0
   3 5 { \ i. 10
+---------+---------+---------+---------+---------+---------+-----+-----+
|0 1 2    |1 2 3    |2 3 4    |3 4 5    |4 5 6    |5 6 7    |6 7 8|7 8 9|
+---------+---------+---------+---------+---------+---------+-----+-----+
|0 1 2 3 4|1 2 3 4 5|2 3 4 5 6|3 4 5 6 7|4 5 6 7 8|5 6 7 8 9|     |     |
+---------+---------+---------+---------+---------+---------+-----+-----+
   3 5 ({.) \ i. 10
0 1 2 3 4 5 6 7
0 1 2 3 4 5 0 0
   3 5 each {. i. 10
|domain error: each
|   3 5     each{.i.10
   3 5 {. each i. 10
|length error
|   3 5    {.each i.10
   3 5 + each 10
+--+--+
|13|15|
+--+--+
   3 5 + each i. 10
|length error
|   3 5    +each i.10
   each i. 4
|syntax error
|       each i.4
   i. each 4
+-------+
|0 1 2 3|
+-------+
   each 4
|syntax error
|       each 4
   (3 {. i. 10) ; 5 {. i. 10
+-----+---------+
|0 1 2|0 1 2 3 4|
+-----+---------+
   3 5 {./ i. 10
|length error
|   3 5    {./i.10
   5 5 {./ i. 10
|length error
|   5 5    {./i.10
   5 {./ i. 10
0 1 2 3 4
   3 5 {. each i. 10
|length error
|   3 5    {.each i.10
   'BF' e. 'BFFBBFRRR'
1 1
   'BF' E. 'BFFBBFRRR'
1 0 0 0 1 0 0 0 0
   'BF' =/ 'BFFBBFRRR'
1 0 0 1 1 0 0 0 0
0 1 1 0 0 1 0 0 0
   'BR' =/ 'BFFBBFRRR'
1 0 0 1 1 0 0 0 0
0 0 0 0 0 0 1 1 1
   +./ 'BR' =/ 'BFFBBFRRR'
1 0 0 1 1 0 1 1 1
   #: +./ 'BR' =/ 'BFFBBFRRR'
1
0
0
1
1
0
1
1
1
   #. +./ 'BR' =/ 'BFFBBFRRR'
311
   bsp =: 3 : '#. +./ 'BR' =/ y'

|value error: BR
|   bsp=:3 :'#. +./ '    BR' =/ y'
      bsp =: 3 : '#. +./ ''BR'' =/ y'

      passes =: 3 10 $ 
|syntax error
|   passes=:    3 10$
   
   BFFFBBFRRR: row 70, column 7, seat ID 567.
FFFBBBFRRR: row 14, column 7, seat ID 119.
BBFFBBFRLL: row 102, column 4, seat ID 820.
|spelling error
|   BFFFBBFRRR: row 70, column 7, seat ID 567.
|   ^
   |spelling error
|   FFFBBBFRRR: row 14, column 7, seat ID 119.
|   ^
   |spelling error
|   BBFFBBFRLL: row 102, column 4, seat ID 820.
|   ^
   FBFBBFFRLR
   
passes =: 1 : 0
BFFFBBFRRR
FFFBBBFRRR
BBFFBBFRLL
FBFBBFFRLR
)


            
   passes
1 : 0
BFFFBBFRRR
FFFBBBFRRR
BBFFBBFRLL
FBFBBFFRLR
)
   $ passes
|value error: FBFBBFFRLR
   passes
1 : 0
BFFFBBFRRR
FFFBBBFRRR
BBFFBBFRLL
FBFBBFFRLR
)
   
passes =: 0 : 0
BFFFBBFRRR
FFFBBBFRRR
BBFFBBFRLL
FBFBBFFRLR
)


            
   passes
BFFFBBFRRR
FFFBBBFRRR
BBFFBBFRLL
FBFBBFFRLR

   $ passes
44
   , passes
BFFFBBFRRR
FFFBBBFRRR
BBFFBBFRLL
FBFBBFFRLR

   NL = passes
|value error: NL
|       NL=passes
   LF = passes
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1
   -. LF = passes
1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0
   (-. LF = passes) # passes
BFFFBBFRRRFFFBBBFRRRBBFFBBFRLLFBFBBFFRLR
   p =. 4 10 $ (-. LF = passes) # passes
   p
BFFFBBFRRR
FFFBBBFRRR
BBFFBBFRLL
FBFBBFFRLR
   'BR' =/ p
1 0 0 0 1 1 0 0 0 0
0 0 0 1 1 1 0 0 0 0
1 1 0 0 1 1 0 0 0 0
0 1 0 1 1 0 0 0 0 0

0 0 0 0 0 0 0 1 1 1
0 0 0 0 0 0 0 1 1 1
0 0 0 0 0 0 0 1 0 0
0 0 0 0 0 0 0 1 0 1
   +./ 'BR' =/ p
1 0 0 0 1 1 0 1 1 1
0 0 0 1 1 1 0 1 1 1
1 1 0 0 1 1 0 1 0 0
0 1 0 1 1 0 0 1 0 1
   #. +./ 'BR' =/ p
567 119 820 357
   
passes =: 0 : 0
FBFBBFFRLR
BFFFBBFRRR
FFFBBBFRRR
BBFFBBFRLL
)

p =. 4 10 $ (-. LF = passes) # passes

#. +./ 'BR' =/ p


               357 567 119 820
         
passes =: 0 : 0
FBFBBFFRLR
BFFFBBFRRR
FFFBBBFRRR
BBFFBBFRLL
)

p =. 4 10 $ (-. LF = passes) # passes

#. +./ 'BR' =/ p


               357 567 119 820
         
passes =: 0 : 0
FBFBBFFRLR
BFFFBBFRRR
FFFBBBFRRR
BBFFBBFRLL
)


            
p =. 4 10 $ (-. LF = passes) # passes


            
#. +./ 'BR' =/ p


   357 567 119 820
         
readfile =: 1!:1

         
passes =: readfile < jpath '~/Downloads/2020-5.txt'

         $ passes
9229
   9229 % 11
839
   
p =. (11 %~ # passes) 10 $ (-. LF = passes) # passes

   |syntax error
|   p=:    (11%~#passes)10$(-.LF=passes)#passes
      
p =. ((11 %~ # passes), 10) $ (-. LF = passes) # passes

         3 {. p
BFBFFFFLLL
BBFBBFBRLL
BFBBFFFRRR
   _3 {. p
BBFFBFFRLL
FBFFFFBRLL
FBFFBFBLRL
   
#. +./ 'BR' =/ p

   640 876 711 312 220 898 751 394 177 266 820 889 245 805 614 881 382 546 276 459 93 433 322 593 862 621 326 670 336 590 254 85 794 676 653 455 788 468 227 362 497 314 102 453 837 872 318 535 403 370 766 778 272 97 467 918 645 141 300 388 111 483 749 519 247...
      
>./ #. +./ 'BR' =/ p

   919
      
#. +./ 'BR' =/ p

   640 876 711 312 220 898 751 394 177 266 820 889 245 805 614 881 382 546 276 459 93 433 322 593 862 621 326 670 336 590 254 85 794 676 653 455 788 468 227 362 497 314 102 453 837 872 318 535 403 370 766 778 272 97 467 918 645 141 300 388 111 483 749 519 247...
      
spl =. /:~ #. +./ 'BR' =/ p

         {. i. 4
0
   {: i. 4
3
   }. i. 4
1 2 3
   }: i. 4
0 1 2
   
}. - }: spl

   _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 ...
      
}: - }. spl

   _81 _82 _83 _84 _85 _86 _87 _88 _89 _90 _91 _92 _93 _94 _95 _96 _97 _98 _99 _100 _101 _102 _103 _104 _105 _106 _107 _108 _109 _110 _111 _112 _113 _114 _115 _116 _117 _118 _119 _120 _121 _122 _123 _124 _125 _126 _127 _128 _129 _130 _131 _132 _133 _134 _135 ...
      
spl

   80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 ...
      
(}: - }.) spl

   _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _...
      
(}. - }:) spl

   1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...
      
-. (}. - }:) spl

   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...
      
1 I.@E. -. (}. - }:) spl

   
      
1 I.@E. -. (}. - }:) spl

   
      
$ -. (}. - }:) spl

   838
      _4 {. spl
916 917 918 919
   
spl - 1 {. spl

   |length error
|   spl    -1{.spl
      
1 {. spl

   80
      
spl - (1 {. spl)

   |length error
|   spl    -(1{.spl)
      
spl - (, 1 {. spl)

   |length error
|   spl    -(,1{.spl)
      
spl - ,( 1 {. spl)

   |length error
|   spl    -,(1{.spl)
      
$ ( 1 {. spl)

   1
      
1 {. spl

   80
      
spl - (1 {. spl) 

   |length error
|   spl    -(1{.spl)
      
spl - (, 1 {. spl) 

   |length error
|   spl    -(,1{.spl)
      spl
80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 ...
   spl - 80
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88...
   spl - (0 { spl)
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88...
   i. 4 e. 1 3

   (i. 4) e. 1 3
0 1 0 1
   1 3 e. i. 4
1 1
   
mn =: 0 { spl

         
mx =: _1 { spl - mn

         mn
80
   mx
839
   $ spl
839
   _1 { spl - mn
839
   i. 839 e. spl - mn
0
   (i. 839) e. spl - mn
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...
   -. (i. 839) e. spl - mn
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...
   1 I.@E. -. (i. 839) e. spl - mn
562
   mn + 1 I.@E. -. (i. 839) e. spl - mn
642
   26 {. (65 + 32) }. a.
abcdefghijklmnopqrstuvwxyz
   
az =: 26 {. (65 + 32) }. a.

         26 {. (65 + 32) }. a.
abcdefghijklmnopqrstuvwxyz
   az
abcdefghijklmnopqrstuvwxyz
   $ az
26
   az i. 'aabc'
0 0 1 2
   'aabc' i. az
0 2 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
   az e. 'aaabcdf'
1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
   (az e. 'aaabcdf') # az
abcdf
   foobar =: noun define
asd
fa
sdf
a
s

s

sssss
)
   foobar
asd
fa
sdf
a
s

s

sssss

   $ foobar
25
   LF = foobar
0 0 0 1 0 0 1 0 0 0 1 0 1 0 1 1 0 1 1 0 0 0 0 0 1
   (-. LF = foobar) $ foobar
   (-. LF = foobar) # foobar
asdfasdfasssssss
   load 'strings'
   chopstring
3 : 0
(' ';'""') chopstring y
:
dat=. y
'fd sd'=. 2{. boxopen x
assert. 1 = #fd
if. #sd do.
  sd=. ~.sd
  if. 1 < #sd do.
    s=. {. '|`' -. fd
    dat=. dat charsub~ ,sd,.s
    sd=. s
  end.
  dat=. dat,fd
  b=. dat e. fd
  c=. dat e. sd
  d=. ~:/\ c
  fmsk=. b > d
  smsk=. (> (0 , }:)) c
  smsk=. -. smsk +. c *. 1|.fmsk
  y=. smsk#y,fd
  fmsk=. 0:^:(,@1: -: ]) smsk#fmsk
  fmsk <;._2 y
else.
  <;._2 dat,fd
end.
)
   'x' chopstring 'aaaxbxdddxeeexxfff'
+---+-+---+---++---+
|aaa|b|ddd|eee||fff|
+---+-+---+---++---+
   $ each 'x' chopstring 'aaaxbxdddxeeexxfff'
+-+-+-+-+-+-+
|3|1|3|3|0|3|
+-+-+-+-+-+-+
   'x' splitstring 'aaaxbxdddxeeexxfff'
+---+-+---+---++---+
|aaa|b|ddd|eee||fff|
+---+-+---+---++---+
   t5 =. readfile < jpath '../2020/t05.txt'
|file name error: readfile
|   t5=:    readfile<jpath'../2020/t05.txt'
   