   
readfile =: 1!:1

load 'strings'

load 'regex'

load 'text'



                                 
   13 : 'y =. y + 1'
3 : 'y =. y + 1'
     ,/ (_1 0 1) (,."0 0)/ (_1 0 1)
_1 _1
_1  0
_1  1
 0 _1
 0  0
 0  1
 1 _1
 1  0
 1  1
   (4&{. , _4&{.) ,/ (_1 0 1) (,."0 0)/ (_1 0 1)
_1 _1
_1  0
_1  1
 0 _1
 0  1
 1 _1
 1  0
 1  1
   
xypm =: (4&{. , _4&{.) ,/ (_1 0 1) (,."0 0)/ (_1 0 1)

         
   xypm
_1 _1
_1  0
_1  1
 0 _1
 0  1
 1 _1
 1  0
 1  1
 m
|value error: m
   m
|value error: m
   m =: i. 4 4 
   m
 0  1  2  3
 4  5  6  7
 8  9 10 11
12 13 14 15
   xypm (|.!.0)/  3 3 $ 9
0 0 0
0 9 9
0 9 9

0 0 0
9 9 9
9 9 9

0 0 0
9 9 0
9 9 0

0 9 9
0 9 9
0 9 9

9 9 0
9 9 0
9 9 0

0 9 9
0 9 9
0 0 0

9 9 9
9 9 9
0 0 0

9 9 0
9 9 0
0 0 0
   xypm (|.!.0)/  i. 4 4 
 0  0  0  0
 0  0  1  2
 0  4  5  6
 0  8  9 10

 0  0  0  0
 0  1  2  3
 4  5  6  7
 8  9 10 11

 0  0  0  0
 1  2  3  0
 5  6  7  0
 9 10 11  0

 0  0  1  2
 0  4  5  6
 0  8  9 10
 0 12 13 14

 1  2  3  0
 5  6  7  0
 9 10 11  0
13 14 15  0

 0  4  5  6
 0  8  9 10
 0 12 13 14
 0  0  0  0

 4  5  6  7
 8  9 10 11
12 13 14 15
 0  0  0  0

 5  6  7  0
 9 10 11  0
13 14 15  0
 0  0  0  0
   xypm (|.!.0)/ 4 4 $ 1 0 0 1
0 0 0 0
0 1 0 0
0 1 0 0
0 1 0 0

0 0 0 0
1 0 0 1
1 0 0 1
1 0 0 1

0 0 0 0
0 0 1 0
0 0 1 0
0 0 1 0

0 1 0 0
0 1 0 0
0 1 0 0
0 1 0 0

0 0 1 0
0 0 1 0
0 0 1 0
0 0 1 0

0 1 0 0
0 1 0 0
0 1 0 0
0 0 0 0

1 0 0 1
1 0 0 1
1 0 0 1
0 0 0 0

0 0 1 0
0 0 1 0
0 0 1 0
0 0 0 0
   xypm (|.!.0)/ 4 4 $ 1 0 0 0 0
0 0 0 0
0 1 0 0
0 0 1 0
0 0 0 1

0 0 0 0
1 0 0 0
0 1 0 0
0 0 1 0

0 0 0 0
0 0 0 0
1 0 0 0
0 1 0 0

0 1 0 0
0 0 1 0
0 0 0 1
0 0 0 0

0 0 0 0
1 0 0 0
0 1 0 0
0 0 1 0

0 0 1 0
0 0 0 1
0 0 0 0
0 0 0 0

0 1 0 0
0 0 1 0
0 0 0 1
0 0 0 0

1 0 0 0
0 1 0 0
0 0 1 0
0 0 0 0
   xypm (|.!.0)/ 4 4 $ 1 0 0 0 0 0
0 0 0 0
0 1 0 0
0 0 0 1
0 0 0 0

0 0 0 0
1 0 0 0
0 0 1 0
0 0 0 0

0 0 0 0
0 0 0 0
0 1 0 0
0 0 0 0

0 1 0 0
0 0 0 1
0 0 0 0
0 1 0 0

0 0 0 0
0 1 0 0
0 0 0 0
0 0 0 0

0 0 0 1
0 0 0 0
0 1 0 0
0 0 0 0

0 0 1 0
0 0 0 0
1 0 0 0
0 0 0 0

0 1 0 0
0 0 0 0
0 0 0 0
0 0 0 0
   4 4 $ 1 0 0 0 0 0
1 0 0 0
0 0 1 0
0 0 0 0
1 0 0 0
   +./ xypm (|.!.0)/ 4 4 $ 1 0 0 0 0 0
0 1 1 1
1 1 0 1
1 1 1 1
0 1 0 0
   
expand =: 3 : 0
   +./ xypm (|.!.0)/ y
)


            
   n 
|value error: n
   n =: 10 10 $ 0
   n
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
   1 (6 3 }) n
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
1 1 1 1 1 1 1 1 1 1
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
1 1 1 1 1 1 1 1 1 1
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
   1 (< 6 3 }) n
|length error
|   1    (<6 3})n
   1 (< 6 3) } n
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 1 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
   n =. 1 (< 6 3) } n
   n
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 1 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
   expand n
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 1 1 1 0 0 0 0 0
0 0 1 0 1 0 0 0 0 0
0 0 1 1 1 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
   expand expand n
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 1 1 1 1 1 0 0 0 0
0 1 1 1 1 1 0 0 0 0
0 1 1 1 1 1 0 0 0 0
0 1 1 1 1 1 0 0 0 0
0 1 1 1 1 1 0 0 0 0
0 0 0 0 0 0 0 0 0 0
   expand expand expand n
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
1 1 1 1 1 1 1 0 0 0
1 1 1 1 1 1 1 0 0 0
1 1 1 1 1 1 1 0 0 0
1 1 1 1 1 1 1 0 0 0
1 1 1 1 1 1 1 0 0 0
1 1 1 1 1 1 1 0 0 0
1 1 1 1 1 1 1 0 0 0
   expand^:1 n
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 1 1 1 0 0 0 0 0
0 0 1 0 1 0 0 0 0 0
0 0 1 1 1 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
   expand^:2 n
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 1 1 1 1 1 0 0 0 0
0 1 1 1 1 1 0 0 0 0
0 1 1 1 1 1 0 0 0 0
0 1 1 1 1 1 0 0 0 0
0 1 1 1 1 1 0 0 0 0
0 0 0 0 0 0 0 0 0 0
   expand^:3 n
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
1 1 1 1 1 1 1 0 0 0
1 1 1 1 1 1 1 0 0 0
1 1 1 1 1 1 1 0 0 0
1 1 1 1 1 1 1 0 0 0
1 1 1 1 1 1 1 0 0 0
1 1 1 1 1 1 1 0 0 0
1 1 1 1 1 1 1 0 0 0
   expand^:a: n
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 1 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0

0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 1 1 1 0 0 0 0 0
0 0 1 0 1 0 0 0 0 0
0 0 1 1 1 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0

0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 1 1 1 1 1 0 0 0 0
0 1 1 1 1 1 0 0 0 0
0 1 1 1 1 1 0 0 0 0
0 1 1 1 1 1 0 0 0 0
0 1 1 1 1 1 0 0 0 0
0 0 0 0 0 0 0 0 0 0

0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
1 1 1 1 1 1 1 0 0 0
1 1 1 1 1 1 1 0 0 0
1 1 1 1 1 1 1 0 0 0
1 1 1 1 1 1 1 0 0 0
1 1 1 1 1 1 1 0 0 0
1 1 1 1 1 1 1 0 0 0
1 1 1 1 1 1 1 0 0 0

0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
1 1 1 1 1 1 1 1 0 0
1 1 1 1 1 1 1 1 0 0
1 1 1 1 1 1 1 1 0 0
1 1 1 1 1 1 1 1 0 0
1 1 1 1 1 1 1 1 0 0
1 1 1 1 1 1 1 1 0 0
1 1 1 1 1 1 1 1 0 0
1 1 1 1 1 1 1 1 0 0

0 0 0 0 0 0 0 0 0 0
1 1 1 1 1 1 1 1 1 0
1 1 1 1 1 1 1 1 1 0
1 1 1 1 1 1 1 1 1 0
1 1 1 1 1 1 1 1 1 0
1 1 1 1 1 1 1 1 1 0
1 1 1 1 1 1 1 1 1 0
1 1 1 1 1 1 1 1 1 0
1 1 1 1 1 1 1 1 1 0
1 1 1 1 1 1 1 1 1 0

1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1
   
step1 =: 3 : 0
  m =: y
  m =: m + 1
  flashes =: m > 9
  newflashes =: expand flashes
  m = m + newflashes
  m ; newflashes ; flashes
)


            
   
t0 =: 5 5 $ 1 1 1 1 1 1 9 9 9 1 1 9 1 9 1 1 9 9 9 1

         
   t0
1 1 1 1 1
1 9 9 9 1
1 9 1 9 1
1 9 9 9 1
1 1 1 1 1
   step1 t0
+------------+---------+---------+
|2  2  2  2 2|1 1 1 1 1|0 0 0 0 0|
|2 10 10 10 2|1 1 1 1 1|0 1 1 1 0|
|2 10  2 10 2|1 1 1 1 1|0 1 0 1 0|
|2 10 10 10 2|1 1 1 1 1|0 1 1 1 0|
|2  2  2  2 2|1 1 1 1 1|0 0 0 0 0|
+------------+---------+---------+
   
expand =: 3 : 0
   +/ xypm (|.!.0)/ y
)


            step1 t0
+------------+---------+---------+
|2  2  2  2 2|1 2 3 2 1|0 0 0 0 0|
|2 10 10 10 2|2 2 4 2 2|0 1 1 1 0|
|2 10  2 10 2|3 4 8 4 3|0 1 0 1 0|
|2 10 10 10 2|2 2 4 2 2|0 1 1 1 0|
|2  2  2  2 2|1 2 3 2 1|0 0 0 0 0|
+------------+---------+---------+
   flashes
0 0 0 0 0
0 1 1 1 0
0 1 0 1 0
0 1 1 1 0
0 0 0 0 0
   expand flashes
1 2 3 2 1
2 2 4 2 2
3 4 8 4 3
2 2 4 2 2
1 2 3 2 1
   t0 + expand flashes
2  3  4  3 2
3 11 13 11 3
4 13  9 13 4
3 11 13 11 3
2  3  4  3 2
   1 + t0 + expand flashes
3  4  5  4 3
4 12 14 12 4
5 14 10 14 5
4 12 14 12 4
3  4  5  4 3
   
step1 =: 3 : 0
  m =: y
  m =: m + 1
  flashes =: m > 9
  newflashes =: expand flashes
  m =: m + newflashes
  m ; newflashes ; flashes
)


3  4  5  4 3
4 12 14 12 4
5 14 10 14 5
4 12 14 12 4
3  4  5  4 3
            
step1 =: 3 : 0
  m =: y
  m =: m + 1
  flashes =: m > 9
  newflashes =: expand flashes
  m =: m + newflashes
  m ; newflashes ; flashes
)


            
   step1 t0
+------------+---------+---------+
|3  4  5  4 3|1 2 3 2 1|0 0 0 0 0|
|4 12 14 12 4|2 2 4 2 2|0 1 1 1 0|
|5 14 10 14 5|3 4 8 4 3|0 1 0 1 0|
|4 12 14 12 4|2 2 4 2 2|0 1 1 1 0|
|3  4  5  4 3|1 2 3 2 1|0 0 0 0 0|
+------------+---------+---------+
   (0 $ 0) ; t0
++---------+
||1 1 1 1 1|
||1 9 9 9 1|
||1 9 1 9 1|
||1 9 9 9 1|
||1 1 1 1 1|
++---------+
   
   step_auto
step_auto =: 3 : 0
  result =: 0 $ 0
  m =: y
  m =: m + 1
  af =: ($m) $ 0
  NB. all-flashes array is initially all zeroes
  while. +./ , m > 9
  NB. if any elt is greater than 9
  do.
     nf =: (m > 9) *. -. af
     NB. new flashes = 
     m =: m + expand nf
     af =: af +./ nf
     m =: m * -. af
     NB. newly-flashed octopuses are added to af
     result =: result ; m
  end.
  result return.
)  
     

|value error: step_auto
            
   
step_auto =: 3 : 0
  result =: 0 $ 0
  m =: y
  m =: m + 1
  af =: ($m) $ 0
  NB. all-flashes array is initially all zeroes
  while. +./ , m > 9
  NB. if any elt is greater than 9
  do.
     nf =: (m > 9) *. -. af
     NB. new flashes = 
     m =: m + expand nf
     af =: af +./ nf
     m =: m * -. af
     NB. newly-flashed octopuses are added to af
     result =: result ; m
  end.
  result return.
)  


            
   step_auto t0
|out of memory: step_auto
|   af=:af    +./nf
   t0
1 1 1 1 1
1 9 9 9 1
1 9 1 9 1
1 9 9 9 1
1 1 1 1 1
   
step_auto =: 3 : 0
  result =: 0 $ 0
  m =: y
  m =: m + 1
  af =: ($m) $ 0
  NB. all-flashes array is initially all zeroes
  while. +./ , m > 9
  NB. if any elt is greater than 9
  do.
     nf =: (m > 9) *. -. af
     NB. new flashes = 
     m =: m + expand nf
     af =: af +. nf
     m =: m * -. af
     NB. newly-flashed octopuses are added to af
     result =: result ; m
  end.
  result return.
)  
     


step_auto =: 3 : 0
  result =: 0 $ 0
  m =: y
  m =: m + 1
  af =: ($m) $ 0
  NB. all-flashes array is initially all zeroes
  while. +./ , m > 9
  NB. if any elt is greater than 9
  do.
     nf =: (m > 9) *. -. af
     NB. new flashes =    
     m =: m + expand nf
     af =: af +. nf
     m =: m * -. af
     NB. newly-flashed octopuses are added to af
     result =: result ; m
  end.
  result return.
)  
     

         
   step_auto t0
+-------------+---------+
|++----------+|3 4 5 4 3|
|||3 4  5 4 3||4 0 0 0 4|
|||4 0  0 0 4||5 0 0 0 5|
|||5 0 10 0 5||4 0 0 0 4|
|||4 0  0 0 4||3 4 5 4 3|
|||3 4  5 4 3||         |
|++----------+|         |
+-------------+---------+
   step_auto step_auto t0
|domain error: step_auto
|   m=:m    +1
   step_auto > 1 { step_auto t0

   1 { step_auto t0
+---------+
|3 4 5 4 3|
|4 0 0 0 4|
|5 0 0 0 5|
|4 0 0 0 4|
|3 4 5 4 3|
+---------+
   > 1 { step_auto t0
3 4 5 4 3
4 0 0 0 4
5 0 0 0 5
4 0 0 0 4
3 4 5 4 3
   step_auto > 1 { step_auto t0

   
step_auto =: 3 : 0
  result =: 0 $ 0
  m =: y
  m =: m + 1
  af =: ($m) $ 0
  NB. all-flashes array is initially all zeroes
  while. +./ , m > 9
  NB. if any elt is greater than 9
  do.
     nf =: (m > 9) *. -. af
     NB. new flashes = 
     m =: m + expand nf
     af =: af +. nf
     m =: m * -. af
     NB. newly-flashed octopuses are added to af
     result =: result ; m
  end.
  m; result return.
)  
     


step_auto =: 3 : 0
  result =: 0 $ 0
  m =: y
  m =: m + 1
  af =: ($m) $ 0
  NB. all-flashes array is initially all zeroes
  while. +./ , m > 9
  NB. if any elt is greater than 9
  do.
     nf =: (m > 9) *. -. af
     NB. new flashes = 
     m =: m + expand nf
     af =: af +. nf
     m =: m * -. af
     NB. newly-flashed octopuses are added to af
     result =: result ; m
  end.
  m; result return.
   )  
     

         step_auto > 1 { step_auto t0
|domain error: step_auto
|   m=:m    +1
   
step_auto =: 3 : 0
  m =: y
  m =: m + 1
  result =: < m
  af =: ($m) $ 0
  NB. all-flashes array is initially all zeroes
  while. +./ , m > 9
  NB. if any elt is greater than 9
  do.
     nf =: (m > 9) *. -. af
     NB. new flashes = 
     m =: m + expand nf
     af =: af +. nf
     m =: m * -. af
     NB. newly-flashed octopuses are added to af
     result =: result , < m
  end.
  result return.
)  
     

            
   step_auto t0
+------------+----------+---------+
|2  2  2  2 2|3 4  5 4 3|3 4 5 4 3|
|2 10 10 10 2|4 0  0 0 4|4 0 0 0 4|
|2 10  2 10 2|5 0 10 0 5|5 0 0 0 5|
|2 10 10 10 2|4 0  0 0 4|4 0 0 0 4|
|2  2  2  2 2|3 4  5 4 3|3 4 5 4 3|
+------------+----------+---------+
   2 { step_auto t0
+---------+
|3 4 5 4 3|
|4 0 0 0 4|
|5 0 0 0 5|
|4 0 0 0 4|
|3 4 5 4 3|
+---------+
   > 2 { step_auto t0
3 4 5 4 3
4 0 0 0 4
5 0 0 0 5
4 0 0 0 4
3 4 5 4 3
   step_auto > 2 { step_auto t0
+---------+
|4 5 6 5 4|
|5 1 1 1 5|
|6 1 1 1 6|
|5 1 1 1 5|
|4 5 6 5 4|
+---------+
   
step_auto =: 3 : 0
  m =: y
  m =: m + 1
  af =: ($m) $ 0
  NB. all-flashes array is initially all zeroes
  while. +./ , m > 9
  NB. if any elt is greater than 9
  do.
     nf =: (m > 9) *. -. af
     NB. new flashes = 
     m =: m + expand nf
     af =: af +. nf
     m =: m * -. af
     NB. newly-flashed octopuses are added to af
  end.
  m return.
)  
     

            
   step_auto t0
3 4 5 4 3
4 0 0 0 4
5 0 0 0 5
4 0 0 0 4
3 4 5 4 3
   step_auto^:2 t0
4 5 6 5 4
5 1 1 1 5
6 1 1 1 6
5 1 1 1 5
4 5 6 5 4
   step_auto^:3 t0
5 6 7 6 5
6 2 2 2 6
7 2 2 2 7
6 2 2 2 6
5 6 7 6 5
   
t1 =: readfile < jpath '~/Code/adventJ/11-t1.txt'

   |file name error: readfile
|   t1=:    readfile<jpath'~/Code/adventJ/11-t1.txt'
      
readfile =: 1!:1

load 'strings'

load 'regex'

load 'text'


                              
t1 =: readfile < jpath '~/Code/adventJ/11-t1.txt'

   |file name error: readfile
|   t1=:    readfile<jpath'~/Code/adventJ/11-t1.txt'
      
t1 =: readfile < jpath '~/Code/adventJ/2021/11-t1.txt'

         t1
5483143223
2745854711
5264556173
6141336146
6357385478
4167524645
2176841721
6882881134
4846848554
5283751526

   t1 , ' '
5483143223
2745854711
5264556173
6141336146
6357385478
4167524645
2176841721
6882881134
4846848554
5283751526
 
   t1 ,: ' '
5483143223
2745854711
5264556173
6141336146
6357385478
4167524645
2176841721
6882881134
4846848554
5283751526

                                                                                                              
   eliminateLF t1
|value error: eliminateLF
|       eliminateLF t1
   
eliminatecommas =: 3 : 0
   ' ' ((',' = y) # (i. # y)) } y
)

eliminateLF =: 3 : 0
   ' ' ((LF = y) # (i. # y)) } y
)


                  eliminateLF t1
5483143223 2745854711 5264556173 6141336146 6357385478 4167524645 2176841721 6882881134 4846848554 5283751526 
   
eliminatespaces =: 3 : 0
   ' ' ((',' = y) # (i. # y)) } y
)


            eliminatespaces eliminateLF t1
5483143223 2745854711 5264556173 6141336146 6357385478 4167524645 2176841721 6882881134 4846848554 5283751526 
   eliminatespaces eliminateLF t1
eliminatespaces =: 3 : 0
   '' ((' ' = y) # (i. # y)) } y
)


5483143223 2745854711 5264556173 6141336146 6357385478 4167524645 2176841721 6882881134 4846848554 5283751526 
            
   eliminatespaces eliminateLF t1
|length error: eliminatespaces
|   ''    ((' '=y)#(i.#y))}y
   t0
1 1 1 1 1
1 9 9 9 1
1 9 1 9 1
1 9 9 9 1
1 1 1 1 1
   t1
5483143223
2745854711
5264556173
6141336146
6357385478
4167524645
2176841721
6882881134
4846848554
5283751526

   t1 e. '0123456789'
1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0
   (t1 e. '0123456789') # t1
5483143223274585471152645561736141336146635738547841675246452176841721688288113448468485545283751526
   ((t1 e. '0123456789') # t1) ,: ' '
5483143223274585471152645561736141336146635738547841675246452176841721688288113448468485545283751526
                                                                                                    
   |: ((t1 e. '0123456789') # t1) ,: ' '
5 
4 
8 
3 
1 
4 
3 
2 
2 
3 
2 
7 
4 
5 
8 
5 
4 
7 
1 
1 
5 
2 
6 
4 
5 
5 
6 
1 
7 
3 
6 
1 
4 
1 
3 
3 
6 
1 
4 
6 
6 
3 
5 
7 
3 
8 
5 
4 
7 
8 
4 
1 
6 
7 
5 
2 
4 
6 
4 
5 
2 
1 
7 
6 
8 
4 
1 
7 
2 
1 
6 
8 
8 
2 
8 
8 
1 
1 
3 
4 
4 
8 
4 
6 
8 
4 
8 
5 
5 
4 
5 
2 
8 
3 
7 
5 
1 
5 
2 
6 
   ". |: ((t1 e. '0123456789') # t1) ,: ' '
5 4 8 3 1 4 3 2 2 3 2 7 4 5 8 5 4 7 1 1 5 2 6 4 5 5 6 1 7 3 6 1 4 1 3 3 6 1 4 6 6 3 5 7 3 8 5 4 7 8 4 1 6 7 5 2 4 6 4 5 2 1 7 6 8 4 1 7 2 1 6 8 8 2 8 8 1 1 3 4 4 8 4 6 8 4 8 5 5 4 5 2 8 3 7 5 1 5 2 6
   $ ". |: ((t1 e. '0123456789') # t1) ,: ' '
100
   10 10 $ ". |: ((t1 e. '0123456789') # t1) ,: ' '
5 4 8 3 1 4 3 2 2 3
2 7 4 5 8 5 4 7 1 1
5 2 6 4 5 5 6 1 7 3
6 1 4 1 3 3 6 1 4 6
6 3 5 7 3 8 5 4 7 8
4 1 6 7 5 2 4 6 4 5
2 1 7 6 8 4 1 7 2 1
6 8 8 2 8 8 1 1 3 4
4 8 4 6 8 4 8 5 5 4
5 2 8 3 7 5 1 5 2 6
   10 10 $ ". |: ((t1 e. '0123456789') # t1) ,: ' '
5 4 8 3 1 4 3 2 2 3
2 7 4 5 8 5 4 7 1 1
5 2 6 4 5 5 6 1 7 3
6 1 4 1 3 3 6 1 4 6
6 3 5 7 3 8 5 4 7 8
4 1 6 7 5 2 4 6 4 5
2 1 7 6 8 4 1 7 2 1
6 8 8 2 8 8 1 1 3 4
4 8 4 6 8 4 8 5 5 4
5 2 8 3 7 5 1 5 2 6
   %. 16
0.0625
   %: 16
4
   
parse =: 3 : 0
  nums =. ". |: ((t1 e. '0123456789') # y) ,: ' '
  n =. %: $ nums
  n n $ nums
)


            
   t1
5483143223
2745854711
5264556173
6141336146
6357385478
4167524645
2176841721
6882881134
4846848554
5283751526

   parse t1
|syntax error: parse
|       n n$nums
   
parse =: 3 : 0
  nums =. ". |: ((t1 e. '0123456789') # y) ,: ' '
  n =. %: $ nums
  (n, n) $ nums
)


            
   parse t1
5 4 8 3 1 4 3 2 2 3
2 7 4 5 8 5 4 7 1 1
5 2 6 4 5 5 6 1 7 3
6 1 4 1 3 3 6 1 4 6
6 3 5 7 3 8 5 4 7 8
4 1 6 7 5 2 4 6 4 5
2 1 7 6 8 4 1 7 2 1
6 8 8 2 8 8 1 1 3 4
4 8 4 6 8 4 8 5 5 4
5 2 8 3 7 5 1 5 2 6
   step_auto parse t1
6 5 9 4 2 5 4 3 3 4
3 8 5 6 9 6 5 8 2 2
6 3 7 5 6 6 7 2 8 4
7 2 5 2 4 4 7 2 5 7
7 4 6 8 4 9 6 5 8 9
5 2 7 8 6 3 5 7 5 6
3 2 8 7 9 5 2 8 3 2
7 9 9 3 9 9 2 2 4 5
5 9 5 7 9 5 9 6 6 5
6 3 9 4 8 6 2 6 3 7
   step_auto step_auto parse t1
8 8 0 7 4 7 6 5 5 5
5 0 8 9 0 8 7 0 5 4
8 5 9 7 8 8 9 6 0 8
8 4 8 5 7 6 9 6 0 0
8 7 0 0 9 0 8 8 0 0
6 6 0 0 0 8 8 9 8 9
6 8 0 0 0 0 5 9 4 3
0 0 0 0 0 0 7 4 5 6
9 0 0 0 0 0 0 8 7 6
8 7 0 0 0 0 6 8 4 8
   load 'viewmat'
   viewmat step_auto step_auto parse t1
   step_auto step_auto step_auto parse t1
0 0 5 0 9 0 0 8 6 6
8 5 0 0 8 0 0 5 7 5
9 9 0 0 0 0 0 0 3 9
9 7 0 0 0 0 0 0 4 1
9 9 3 5 0 8 0 0 6 3
7 7 1 2 3 0 0 0 0 0
7 9 1 1 2 5 0 0 0 9
2 2 1 1 1 3 0 0 0 0
0 4 2 1 1 2 5 0 0 0
0 0 2 1 1 1 9 0 0 0
   viewmat step_auto step_auto step_auto parse t1
   viewmat step_auto^:9 parse t1
   step_auto^:9 parse t1
9 0 6 0 0 0 0 6 4 4
7 8 0 0 0 0 0 9 7 6
6 9 0 0 0 0 0 0 8 0
5 8 4 0 0 0 0 0 8 2
5 8 5 8 0 0 0 0 9 3
6 9 6 2 4 0 0 0 0 0
8 0 2 1 2 5 0 0 0 9
2 2 2 1 1 3 0 0 0 9
9 1 1 1 1 2 8 0 9 7
7 9 1 1 1 1 9 9 7 6
   step_auto^:100 parse t1
0 3 9 7 6 6 6 8 6 6
0 7 4 9 7 6 6 9 1 8
0 0 5 3 9 7 6 9 3 3
0 0 0 4 2 9 7 8 2 2
0 0 0 4 2 2 9 8 9 2
0 0 5 3 2 2 2 8 7 7
0 5 3 2 2 2 2 9 6 6
9 3 2 2 2 2 8 9 6 6
7 9 2 2 2 8 6 8 6 6
6 7 8 9 9 9 8 7 6 6
   viewmat step_auto^:100 parse t1
   
forloop =: 3 : 0
  r =: 0
  for. y
  do.
    r =: r + 1
  end.
  r
)


            
   forloop 3
1
   forloop (i. 4)
4
   
ans1 =: 4 : 0
  m =: y
  for. i. x
  do.
    m =: m + 1
    af =: ($m) $ 0
    nfc =: 0
    NB. all-flashes array is initially all zeroes
    while. +./ , m > 9
    NB. if any elt is greater than 9
    do.
       nf =: (m > 9) *. -. af
       NB. new flashes = 
       nfc =: nfc + +/ , nf
       NB. new flashes count
       m =: m + expand nf
       af =: af +. nf
       m =: m * -. af
       NB. newly-flashed octopuses are added to af
    end.
  end.
  nfc return.
)  




ans1 =: 4 : 0
  m =: y
  for. i. x
  do.
    m =: m + 1
    af =: ($m) $ 0
    nfc =: 0
    NB. all-flashes array is initially all zeroes
    while. +./ , m > 9
    NB. if any elt is greater than 9
    do.
       nf =: (m > 9) *. -. af
       NB. new flashes = 
       nfc =: nfc + +/ , nf
       NB. new flashes count
       m =: m + expand nf
       af =: af +. nf
       m =: m * -. af
       NB. newly-flashed octopuses are added to af
    end.
  end.
  nfc return.
)  
   


            100 ans1 parse t1
13
   
ans1 =: 4 : 0
  m =: y
  nfc =: 0
  for. i. x
  do.
    m =: m + 1
    af =: ($m) $ 0
    NB. all-flashes array is initially all zeroes
    while. +./ , m > 9
    NB. if any elt is greater than 9
    do.
       nf =: (m > 9) *. -. af
       NB. new flashes = 
       nfc =: nfc + +/ , nf
       NB. new flashes count
       m =: m + expand nf
       af =: af +. nf
       m =: m * -. af
       NB. newly-flashed octopuses are added to af
    end.
  end.
  nfc return.
)  




ans1 =: 4 : 0
  m =: y
  nfc =: 0
  for. i. x
  do.
    m =: m + 1
    af =: ($m) $ 0
    NB. all-flashes array is initially all zeroes
    while. +./ , m > 9
    NB. if any elt is greater than 9
    do.
       nf =: (m > 9) *. -. af
          NB. new flashes = 
       nfc =: nfc + +/ , nf
       NB. new flashes count
       m =: m + expand nf
       af =: af +. nf
       m =: m * -. af
       NB. newly-flashed octopuses are added to af
    end.
  end.
  nfc return.
)  



            
   100 ans1 parse t1
1656
   
i =: readfile < jpath '~/Downloads/input-2021-11.txt'

         
   i
2138862165
2726378448
3235172758
6281242643
4256223158
1112268142
1162836182
1543525861
1882656326
8844263151

   100 ans1 parse i
1735
   193 ans2 parse i
ans2 =: 4 : 0
  m =: y
  nfc =: 0
  for. i. x
  do.
    m =: m + 1
    af =: ($m) $ 0
    NB. all-flashes array is initially all zeroes
    while. +./ , m > 9
    NB. if any elt is greater than 9
    do.
       nf =: (m > 9) *. -. af
       NB. new flashes = 
       nfc =: nfc + +/ , nf
       NB. new flashes count
       m =: m + expand nf
       af =: af +. nf
       m =: m * -. af
       NB. newly-flashed octopuses are added to af
    end.
  end.
  m return.
)  


            193 ans2 parse i
ans2 =: 4 : 0
  m =: y
  nfc =: 0
  for. i. x
  do.
    m =: m + 1
    af =: ($m) $ 0
    NB. all-flashes array is initially all zeroes
    while. +./ , m > 9
    NB. if any elt is greater than 9
    do.
       nf =: (m > 9) *. -. af
       NB. new flashes = 
       nfc =: nfc + +/ , nf
       NB. new flashes count
       m =: m + expand nf
       af =: af +. nf
       m =: m * -. af
       NB. newly-flashed octopuses are added to af
    end.
  end.
  m return.
)  


5 5 5 5 5 6 3 4 2 2
7 8 7 6 5 6 7 8 9 2
3 3 3 8 6 5 5 5 6 6
3 3 3 3 8 6 5 5 5 5
3 3 3 3 3 8 6 5 6 6
3 3 3 3 3 3 9 8 9 3
3 3 3 3 8 6 6 0 8 4
3 3 3 7 5 4 5 6 9 2
9 3 7 5 4 4 5 7 2 2
7 9 5 4 4 4 5 2 2 9
            
   193 ans2 parse i
5 5 5 5 5 6 3 4 2 2
7 8 7 6 5 6 7 8 9 2
3 3 3 8 6 5 5 5 6 6
3 3 3 3 8 6 5 5 5 5
3 3 3 3 3 8 6 5 6 6
3 3 3 3 3 3 9 8 9 3
3 3 3 3 8 6 6 0 8 4
3 3 3 7 5 4 5 6 9 2
9 3 7 5 4 4 5 7 2 2
7 9 5 4 4 4 5 2 2 9
   100 ans2 parse i
7 9 3 2 2 3 0 0 0 0
9 0 5 3 2 3 4 5 6 0
0 0 4 3 2 2 2 2 3 3
0 0 9 9 2 2 2 2 2 2
0 9 6 6 9 2 2 2 3 3
0 9 6 6 9 9 5 5 6 0
0 0 9 9 1 1 1 3 0 0
0 4 2 1 1 1 1 3 0 8
5 2 1 1 1 1 1 2 9 7
3 5 1 1 1 1 1 8 7 4
   99 ans2 parse i
5 7 1 1 1 1 9 8 9 7
5 8 2 2 1 1 1 1 1 9
5 8 0 2 1 1 1 1 1 1
6 9 6 8 1 1 1 1 1 1
7 4 4 5 8 1 1 1 1 1
8 4 4 5 8 8 4 3 2 9
8 6 7 8 0 0 0 0 8 9
9 0 0 0 0 0 0 0 7 4
3 0 0 0 0 0 0 0 7 5
2 4 0 0 0 0 0 7 6 3
   1 ans2 parse i
3 2 4 9 9 7 3 2 7 6
3 8 3 7 4 8 9 5 5 9
4 3 4 6 2 8 3 8 6 9
7 3 9 2 3 5 3 7 5 4
5 3 6 7 3 3 4 2 6 9
2 2 2 3 3 7 9 2 5 3
2 2 7 3 9 4 7 2 9 3
2 6 5 4 6 3 6 9 7 2
2 9 9 3 7 6 7 4 3 7
9 9 5 5 3 7 4 2 6 2
   i
2138862165
2726378448
3235172758
6281242643
4256223158
1112268142
1162836182
1543525861
1882656326
8844263151

   t
|value error: t
   t0
1 1 1 1 1
1 9 9 9 1
1 9 1 9 1
1 9 9 9 1
1 1 1 1 1
   t1
5483143223
2745854711
5264556173
6141336146
6357385478
4167524645
2176841721
6882881134
4846848554
5283751526

   193 ans2 parse t1
5 8 7 7 7 7 7 7 7 7
8 8 7 7 7 7 7 7 7 7
7 7 7 7 7 7 7 7 7 7
7 7 7 7 7 7 7 7 7 7
7 7 7 7 7 7 7 7 7 7
7 7 7 7 7 7 7 7 7 7
7 7 7 7 7 7 7 7 7 7
7 7 7 7 7 7 7 7 7 7
7 7 7 7 7 7 7 7 7 7
7 7 7 7 7 7 7 7 7 7
   194 ans2 parse t1
6 9 8 8 8 8 8 8 8 8
9 9 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 8
   195 ans2 parse t1
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
   t0
1 1 1 1 1
1 9 9 9 1
1 9 1 9 1
1 9 9 9 1
1 1 1 1 1
   t0 = t0
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
   t0 ="1 t0
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
   t0 - t0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
0 0 0 0 0
   0 = +/ , t0
0
   -. 0 = +/ , t0
1
   
ans2 =: 3 : 0
  m =: y
  stepcount =: 0
  fc =: 0
  while. -. 0 = +/ , m
  NB. while m has any nonzero elements
  do.
    m =: m + 1
    stepcount = stepcount + 1
    af =: ($m) $ 0
    NB. all-flashes array is initially all zeroes
    while. +./ , m > 9
    NB. if any elt is greater than 9
    do.
       nf =: (m > 9) *. -. af
       NB. new flashes = 
       nfc =: +/ , nf
       NB. new flashes count
       m =: m + expand nf
       af =: af +. nf
       m =: m * -. af
       NB. newly-flashed octopuses are added to af
    end.
  end.
  stepcount return.
)



ans2 =: 3 : 0
  m =: y
  stepcount =: 0
  fc =: 0
  while. -. 0 = +/ , m
  NB. while m has any nonzero elements
  do.
    m =: m + 1
    stepcount = stepcount + 1
    af =: ($m) $ 0
    NB. all-flashes array is initially all zeroes
    while. +./ , m > 9
    NB. if any elt is greater than 9
    do.
       nf =: (m > 9) *. -. af
       NB. new flashes = 
       nfc =: +/ , nf
       NB. new flashes count
       m =: m + expand nf
       af =: af +. nf
       m =: m * -. af
          NB. newly-flashed octopuses are added to af
    end.
  end.
  stepcount return.
)


         
   t1
5483143223
2745854711
5264556173
6141336146
6357385478
4167524645
2176841721
6882881134
4846848554
5283751526

   parse t1
5 4 8 3 1 4 3 2 2 3
2 7 4 5 8 5 4 7 1 1
5 2 6 4 5 5 6 1 7 3
6 1 4 1 3 3 6 1 4 6
6 3 5 7 3 8 5 4 7 8
4 1 6 7 5 2 4 6 4 5
2 1 7 6 8 4 1 7 2 1
6 8 8 2 8 8 1 1 3 4
4 8 4 6 8 4 8 5 5 4
5 2 8 3 7 5 1 5 2 6
   ans2 parse t1
0
   m
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
   
ans2 =: 3 : 0
  m =: y
  stepcount =: 0
  fc =: 0
  while. -. 0 = +/ , m
  NB. while m has any nonzero elements
  do.
    m =: m + 1
    stepcount =: stepcount + 1
    af =: ($m) $ 0
    NB. all-flashes array is initially all zeroes
    while. +./ , m > 9
    NB. if any elt is greater than 9
    do.
       nf =: (m > 9) *. -. af
       NB. new flashes = 
       nfc =: +/ , nf
       NB. new flashes count
       m =: m + expand nf
       af =: af +. nf
       m =: m * -. af
       NB. newly-flashed octopuses are added to af
    end.
  end.
  stepcount return.
)



ans2 =: 3 : 0
  m =: y
  stepcount =: 0
  fc =: 0
  while. -. 0 = +/ , m
  NB. while m has any nonzero elements
  do.
    m =: m + 1
    stepcount =: stepcount + 1
    af =: ($m) $ 0
    NB. all-flashes array is initially all zeroes
    while. +./ , m > 9
    NB. if any elt is greater than 9
    do.
       nf =: (m > 9) *. -. af
       NB. new flashes = 
       nfc =: +/ , nf
       NB. new flashes count
       m =: m + expand nf
       af =: af +. nf
       m =: m * -. af
       NB. newly-flashed octopuses are added to af
    end.
  end.
     stepcount return.
)


         
   ans2 parse t1
195
   ans2 parse i
400
   exit''

Process J finished
