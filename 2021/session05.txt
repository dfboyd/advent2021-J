   
readfile =: 1!:1

         
t =: readfile < jpath '~/Downloads/test-2021-05.txt'

         t
0,9 -> 5,9
8,0 -> 0,8
9,4 -> 3,4
2,2 -> 2,1
7,0 -> 7,4
6,4 -> 2,0
0,9 -> 2,9
3,4 -> 1,4
0,0 -> 8,8
5,5 -> 8,2

   $ t
110
   
load 'strings'

         
load 'regex'

         
   m =: 4 4 $ 0
   1 (1 1 {) m
|syntax error
|   1(    1 1{)m
   1 1 { m
0 0 0 0
0 0 0 0
   1 1 } m
|length error
|       1 1}m
   1 1 1 } m
|length error
|       1 1 1}m
   1 (1 1 } m
|length error
|   1(    1 1}m
   1 (1 1&}) m
|domain error
|   1    (1 1&})m
   1 (<1 1 }) m
|length error
|   1    (<1 1})m
   1 (< 1 1) } m
0 0 0 0
0 1 0 0
0 0 0 0
0 0 0 0
   1 ( 1 1 ; 2 2 ) } m
0 0 0 0
0 1 0 0
0 0 1 0
0 0 0 0
   1 ( 1 1 ; 2 1 ; 3 1 ) } m
0 0 0 0
0 1 0 0
0 1 0 0
0 1 0 0
   
m =: 4 4 $ 0

         
1 ( 0 0 ; 1 0 ; 2 0 ) } m

   1 0 0 0
1 0 0 0
1 0 0 0
0 0 0 0
   xx =: NB.
|syntax error
|   xx=:
   t
0,9 -> 5,9
8,0 -> 0,8
9,4 -> 3,4
2,2 -> 2,1
7,0 -> 7,4
6,4 -> 2,0
0,9 -> 2,9
3,4 -> 1,4
0,0 -> 8,8
5,5 -> 8,2

   '0123456789' e. t
1 1 1 1 1 1 1 1 1 1
   '0123456789' E. t
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
   '0123456789' I.@E. t

   t e. '0123456789' 
1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 0 1 0 1 0 1 0 1 0 0 0 0 1 0 1 0
   (' -> '; ' ' ; ',' ; ' ')
+----+-+-+-+
| -> | |,| |
+----+-+-+-+
   (' -> '; ' ' ; ',' ; ' ') stringreplace t
0 9 5 9
8 0 0 8
9 4 3 4
2 2 2 1
7 0 7 4
6 4 2 0
0 9 2 9
3 4 1 4
0 0 8 8
5 5 8 2

   ". (' -> '; ' ' ; ',' ; ' ') stringreplace t
|spelling error
|   0 9 5 9
8 0 0 8
9 4 3 4
2 2 2 1
7 0 7 4
6 4 2 0
0 9 2 9
3 4 1 4
0 0 8 8
5 5 8 2

|          ^
|       ".(' -> ';' ';',';' ')stringreplace t
   ": (' -> '; ' ' ; ',' ; ' ') stringreplace t
0 9 5 9
8 0 0 8
9 4 3 4
2 2 2 1
7 0 7 4
6 4 2 0
0 9 2 9
3 4 1 4
0 0 8 8
5 5 8 2

   $ ": (' -> '; ' ' ; ',' ; ' ') stringreplace t
80
   ": (' -> '; ' ' ; ',' ; ' ') stringreplace t
0 9 5 9
8 0 0 8
9 4 3 4
2 2 2 1
7 0 7 4
6 4 2 0
0 9 2 9
3 4 1 4
0 0 8 8
5 5 8 2

   ": (' -> '; ' ' ; ',' ; ' ') stringreplace t
0 9 5 9
8 0 0 8
9 4 3 4
2 2 2 1
7 0 7 4
6 4 2 0
0 9 2 9
3 4 1 4
0 0 8 8
5 5 8 2

   $ ": (' -> '; ' ' ; ',' ; ' ') stringreplace t
80
   ;: (' -> '; ' ' ; ',' ; ' ') stringreplace t
+-------+-+-------+-+-------+-+-------+-+-------+-+-------+-+-------+-+-------+-+-------+-+-------+-+
|0 9 5 9| |8 0 0 8| |9 4 3 4| |2 2 2 1| |7 0 7 4| |6 4 2 0| |0 9 2 9| |3 4 1 4| |0 0 8 8| |5 5 8 2| |
+-------+-+-------+-+-------+-+-------+-+-------+-+-------+-+-------+-+-------+-+-------+-+-------+-+
   ". each ;: (' -> '; ' ' ; ',' ; ' ') stringreplace t
|spelling error
|   

|   ^
|       ".each;:(' -> ';' ';',';' ')stringreplace t
   ". each (' -> '; ' ' ; ',' ; ' ') stringreplace t
|spelling error
|   

|   ^
|       ".each(' -> ';' ';',';' ')stringreplace t
   ". (' -> '; ' ' ; ',' ; ' ') stringreplace t
|spelling error
|   0 9 5 9
8 0 0 8
9 4 3 4
2 2 2 1
7 0 7 4
6 4 2 0
0 9 2 9
3 4 1 4
0 0 8 8
5 5 8 2

|          ^
|       ".(' -> ';' ';',';' ')stringreplace t
   
answer05a =: 3 : 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
)
answer05a t


      10
         
   lines
10
   clean_numbers
0 9 5 9
8 0 0 8
9 4 3 4
2 2 2 1
7 0 7 4
6 4 2 0
0 9 2 9
3 4 1 4
0 0 8 8
5 5 8 2

   $ clean_numbers
80
   eliminateLF clean_numbers
eliminateLF =: 3 : 0
  ' ' ((LF = y) # (i. # y)) } y
)


0 9 5 9
8 0 0 8
9 4 3 4
2 2 2 1
7 0 7 4
6 4 2 0
0 9 2 9
3 4 1 4
0 0 8 8
5 5 8 2

            eliminateLF clean_numbers
eliminateLF =: 3 : 0
  ' ' ((LF = y) # (i. # y)) } y
)


0 9 5 9 8 0 0 8 9 4 3 4 2 2 2 1 7 0 7 4 6 4 2 0 0 9 2 9 3 4 1 4 0 0 8 8 5 5 8 2 
            =: 3 : 0
  ' ' ((LF = y) # (i. # y)) } y
)

  eliminateLF clean_numbers

|syntax error
|   =:3 :0
      0 9 5 9 8 0 0 8 9 4 3 4 2 2 2 1 7 0 7 4 6 4 2 0 0 9 2 9 3 4 1 4 0 0 8 8 5 5 8 2 
      =: 3 : 0
  ' ' ((LF = y) # (i. # y)) } y
)

  eliminateLF clean_numbers

|syntax error
|   =:3 :0
      0 9 5 9 8 0 0 8 9 4 3 4 2 2 2 1 7 0 7 4 6 4 2 0 0 9 2 9 3 4 1 4 0 0 8 8 5 5 8 2 
      
eliminateLF =: 3 : 0
  ' ' ((LF = y) # (i. # y)) } y
)


            
   eliminateLF clean_numbers
0 9 5 9 8 0 0 8 9 4 3 4 2 2 2 1 7 0 7 4 6 4 2 0 0 9 2 9 3 4 1 4 0 0 8 8 5 5 8 2 
   ". eliminateLF clean_numbers
0 9 5 9 8 0 0 8 9 4 3 4 2 2 2 1 7 0 7 4 6 4 2 0 0 9 2 9 3 4 1 4 0 0 8 8 5 5 8 2
   $ ". eliminateLF clean_numbers
40
   10 4 $ ". eliminateLF clean_numbers
0 9 5 9
8 0 0 8
9 4 3 4
2 2 2 1
7 0 7 4
6 4 2 0
0 9 2 9
3 4 1 4
0 0 8 8
5 5 8 2
   
answer05a =: 3 : 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  NB. vlines =: (0 }"1 
  NB. places where the X coordinate stays the same,
  NB. therefore col 0 == col 2
)
answer05a t



answer05a =: 3 : 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  NB. vlines =: (0 }"1 
  NB. places where the X coordinate stays the same,
  NB. therefor   e col 0 == col 2
)
answer05a t


   0 9 5 9
8 0 0 8
9 4 3 4
2 2 2 1
7 0 7 4
6 4 2 0
0 9 2 9
3 4 1 4
0 0 8 8
5 5 8 2
         d
0 9 5 9
8 0 0 8
9 4 3 4
2 2 2 1
7 0 7 4
6 4 2 0
0 9 2 9
3 4 1 4
0 0 8 8
5 5 8 2
   (0 {"1 d)
0 8 9 2 7 6 0 3 0 5
   (0 {"1 d) = (2 {"1 d)
0 0 0 1 1 0 0 0 0 0
   ((0 {"1 d) = (2 {"1 d)) $ d
   ((0 {"1 d) = (2 {"1 d)) # d
2 2 2 1
7 0 7 4
   
answer05a =: 3 : 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d
  
)
answer05a t


      0 9 5 9
9 4 3 4
0 9 2 9
3 4 1 4
         hlines
0 9 5 9
9 4 3 4
0 9 2 9
3 4 1 4
   vlines
2 2 2 1
7 0 7 4
   < hlines
+-------+
|0 9 5 9|
|9 4 3 4|
|0 9 2 9|
|3 4 1 4|
+-------+
   < each hlines
+---+---+---+---+
|+-+|+-+|+-+|+-+|
||0|||9|||5|||9||
|+-+|+-+|+-+|+-+|
+---+---+---+---+
|+-+|+-+|+-+|+-+|
||9|||4|||3|||4||
|+-+|+-+|+-+|+-+|
+---+---+---+---+
|+-+|+-+|+-+|+-+|
||0|||9|||2|||9||
|+-+|+-+|+-+|+-+|
+---+---+---+---+
|+-+|+-+|+-+|+-+|
||3|||4|||1|||4||
|+-+|+-+|+-+|+-+|
+---+---+---+---+
   </"1 hlines
0 0 0 0
   </"0 hlines
0 9 5 9
9 4 3 4
0 9 2 9
3 4 1 4
   </"2 hlines
0 0 0 0
   < hlines
+-------+
|0 9 5 9|
|9 4 3 4|
|0 9 2 9|
|3 4 1 4|
+-------+
   </"1 hlines
0 0 0 0
   < each"1 hlines
+---+---+---+---+
|+-+|+-+|+-+|+-+|
||0|||9|||5|||9||
|+-+|+-+|+-+|+-+|
+---+---+---+---+
|+-+|+-+|+-+|+-+|
||9|||4|||3|||4||
|+-+|+-+|+-+|+-+|
+---+---+---+---+
|+-+|+-+|+-+|+-+|
||0|||9|||2|||9||
|+-+|+-+|+-+|+-+|
+---+---+---+---+
|+-+|+-+|+-+|+-+|
||3|||4|||1|||4||
|+-+|+-+|+-+|+-+|
+---+---+---+---+
   < each"0 hlines
+---+---+---+---+
|+-+|+-+|+-+|+-+|
||0|||9|||5|||9||
|+-+|+-+|+-+|+-+|
+---+---+---+---+
|+-+|+-+|+-+|+-+|
||9|||4|||3|||4||
|+-+|+-+|+-+|+-+|
+---+---+---+---+
|+-+|+-+|+-+|+-+|
||0|||9|||2|||9||
|+-+|+-+|+-+|+-+|
+---+---+---+---+
|+-+|+-+|+-+|+-+|
||3|||4|||1|||4||
|+-+|+-+|+-+|+-+|
+---+---+---+---+
   hlines
0 9 5 9
9 4 3 4
0 9 2 9
3 4 1 4
   $ hlines
4 4
   0 2 {"0 1 hlines
|length error
|   0 2    {"0 1 hlines
   0 2 {"0 hlines
|length error
|   0 2    {"0 hlines
   0 2 { hlines
0 9 5 9
0 9 2 9
   0 2 {"1 hlines
0 5
9 3
0 2
3 1
   /:~ 0 2 {"1 hlines
0 2
0 5
3 1
9 3
   (/:"1)~ 0 2 {"1 hlines
0 5
3 9
0 2
1 3
   
answer05a =: 3 : 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  
)
answer05a t


      0 5
3 9
0 2
1 3
         
   h_endpoints
0 5
3 9
0 2
1 3
   + each h_endpoints
+-+-+
|0|5|
+-+-+
|3|9|
+-+-+
|0|2|
+-+-+
|1|3|
+-+-+
   +/ each h_endpoints
+-+-+
|0|5|
+-+-+
|3|9|
+-+-+
|0|2|
+-+-+
|1|3|
+-+-+
   i. each h_endpoints
+-----+-----------------+
|     |0 1 2 3 4        |
+-----+-----------------+
|0 1 2|0 1 2 3 4 5 6 7 8|
+-----+-----------------+
|     |0 1              |
+-----+-----------------+
|0    |0 1 2            |
+-----+-----------------+
   ((0 { ]) * (1 { ])) each h_endpoints
|index error
|       ((0{])*(1{]))each h_endpoints
   each h_endpoints
|syntax error
|       each h_endpoints
   < each h_endpoints
+---+---+
|+-+|+-+|
||0|||5||
|+-+|+-+|
+---+---+
|+-+|+-+|
||3|||9||
|+-+|+-+|
+---+---+
|+-+|+-+|
||0|||2||
|+-+|+-+|
+---+---+
|+-+|+-+|
||1|||3||
|+-+|+-+|
+---+---+
   < each"1 h_endpoints
+---+---+
|+-+|+-+|
||0|||5||
|+-+|+-+|
+---+---+
|+-+|+-+|
||3|||9||
|+-+|+-+|
+---+---+
|+-+|+-+|
||0|||2||
|+-+|+-+|
+---+---+
|+-+|+-+|
||1|||3||
|+-+|+-+|
+---+---+
   d
0 9 5 9
8 0 0 8
9 4 3 4
2 2 2 1
7 0 7 4
6 4 2 0
0 9 2 9
3 4 1 4
0 0 8 8
5 5 8 2
   y =: {. d
   y
0 9 5 9
   (1 { y), (3 { y)
9 9
   x =: 3 9
   (1 { y), (3 { y), (1 { x)
9 9 9
   =/ (1 { y), (3 { y), (1 { x)
0
   =/ 9 9 9
0
   *./ 9 = 9 9
1
   0 2 { y
0 5
   
overlaps =: 4 : 0
  NB.  aX aY overlaps sX sY eX eY
  NB.  returns if point a is on the line from s to e
  if. *./ (1 { x) = 1 3 { y
      NB. horizontal line
  do.
      ((0 { x) >: (0 { y)) *. ((0 { x) <: (2 { y))
  elseif. *./ (0 { x) = 0 2 { y
      NB. vertical line
      ((1 { x) >: (1 { y)) *. ((1 { x) <: (3 { y))
  else.
      0
  end.
)


   |control error
|   [9]  else.
|   overlaps=:4     :0
         
overlaps =: 4 : 0
  NB.  aX aY overlaps sX sY eX eY
  NB.  returns if point a is on the line from s to e
  if. *./ (1 { x) = 1 3 { y
      NB. horizontal line
  do.
      ((0 { x) >: (0 { y)) *. ((0 { x) <: (2 { y))
  elseif. *./ (0 { x) = 0 2 { y
      NB. vertical line
  do.
      ((1 { x) >: (1 { y)) *. ((1 { x) <: (3 { y))
  else.
      0
  end.
)


   |control error
|   [10]  else.
|   overlaps=:4     :0
         
overlaps =: 4 : 0
  NB.  aX aY overlaps sX sY eX eY
  NB.  returns if point a is on the line from s to e
  if. *./ (1 { x) = 1 3 { y
      NB. horizontal line
  do.
      ((0 { x) >: (0 { y)) *. ((0 { x) <: (2 { y))
  elseif. *./ (0 { x) = 0 2 { y
      NB. vertical line
  do.
      ((1 { x) >: (1 { y)) *. ((1 { x) <: (3 { y))
  elseif. 1
  do.
      0
  end.
)


            
   3 4 overlaps 0 4  5 4
1
   3 4 overlaps 0 4  2 4
0
   3 4 overlaps each d
|length error
|   3 4     overlaps each d
   d
0 9 5 9
8 0 0 8
9 4 3 4
2 2 2 1
7 0 7 4
6 4 2 0
0 9 2 9
3 4 1 4
0 0 8 8
5 5 8 2
   3 4 overlaps/ d
0
   3 4 overlaps d
0
   x
3 9
   y
0 9 5 9
   (1 { x} = 1 3 { y
|index error
|   (1{    x}=1 3{y
   (1 { x} = 1 3 {"1 y
|index error
|   (1{    x}=1 3{"1 y
   1 3 { y
9 9
   (1 { x} = 1 3 {"1 d
|length error
|   (1{    x}=1 3{"1 d
   1 3 { d
8 0 0 8
2 2 2 1
   1 3 {"1 d
9 9
0 8
4 4
2 1
0 4
4 0
9 9
4 4
0 8
5 2
   9 = 1 3 {"1 d
1 1
0 0
0 0
0 0
0 0
0 0
1 1
0 0
0 0
0 0
   (*./"1) 9 = 1 3 {"1 d
1 0 0 0 0 0 1 0 0 0
   1 1 1 1 0 0 0 0 *. 1 0 1 0 1 1 1 1
1 0 1 0 0 0 0 0
   1 1 1 1 0 0 0 0 +. 1 0 1 0 1 1 1 1
1 1 1 1 1 1 1 1
   
overlaps =: 4 : 0
  NB.  aX aY overlaps sX sY eX eY
  NB.  returns if point a is on the line from s to e
  NB.  y is a matrix of those, actually
  xmatches =. (*/"1) (0 { x) = 0 2 {"1 y
  xinrange =: ((0 { x) >: (0 {"1 y)) *. (0 { x) <: (2 {"1 y)

  ymatches =. (*."1) (1 { x) = 1 3 {"1 y
  yinrange =: ((1 { x) >: (1 {"1 y)) *. (1 { x) <: (3 {"1 y)

  (xmatches *. yinrange) +. ymatches *. xinrange
)





overlaps =: 4 : 0
  NB.  aX aY overlaps sX sY eX eY
  NB.  returns if point a is on the line from s to e
  NB.  y is a matrix of those, actually
  xmatches =. (*/"1) (0 { x) = 0 2 {"1 y
  xinrange =: ((0 { x) >: (0 {"1 y)) *. (0 { x) <: (2 {"1 y)

  ymatches =. (*."1) (1 { x)    = 1 3 {"1 y
  yinrange =: ((1 { x) >: (1 {"1 y)) *. (1 { x) <: (3 {"1 y)

  (xmatches *. yinrange) +. ymatches *. xinrange
)




               
   3 4 overlaps d
0 0
0 0

0 0
0 0

0 0
0 0

0 0
0 0

0 0
0 0

0 0
0 0

0 0
0 0

0 0
0 0

0 0
0 0

0 0
0 0
   d
0 9 5 9
8 0 0 8
9 4 3 4
2 2 2 1
7 0 7 4
6 4 2 0
0 9 2 9
3 4 1 4
0 0 8 8
5 5 8 2
   2 9 overlaps d
1 0
1 0

0 0
0 0

0 0
0 0

0 0
0 0

0 0
0 0

0 0
0 0

1 0
1 0

0 0
0 0

0 0
0 0

0 0
0 0
   xmatches
|value error: xmatches
   
overlaps =: 4 : 0
  NB.  aX aY overlaps sX sY eX eY
  NB.  returns if point a is on the line from s to e
  NB.  y is a matrix of those, actually
  xmatches =: (*/"1) (0 { x) = 0 2 {"1 y
  xinrange =: ((0 { x) >: (0 {"1 y)) *. (0 { x) <: (2 {"1 y)

  ymatches =. (*."1) (1 { x) = 1 3 {"1 y
  yinrange =: ((1 { x) >: (1 {"1 y)) *. (1 { x) <: (3 {"1 y)

  (xmatches *. yinrange) +. ymatches *. xinrange
)




                  
   2 9 overlaps d
1 0
1 0

0 0
0 0

0 0
0 0

0 0
0 0

0 0
0 0

0 0
0 0

1 0
1 0

0 0
0 0

0 0
0 0

0 0
0 0
   xmatches
0 0 0 1 0 0 0 0 0 0
   xinrange
1 0 0 1 0 0 1 0 1 0
   ymatches
|value error: ymatches
   
overlaps =: 4 : 0
  NB.  aX aY overlaps sX sY eX eY
  NB.  returns if point a is on the line from s to e
  NB.  y is a matrix of those, actually
  xmatches =: (*/"1) (0 { x) = 0 2 {"1 y
  xinrange =: ((0 { x) >: (0 {"1 y)) *. (0 { x) <: (2 {"1 y)

  ymatches =: (*."1) (1 { x) = 1 3 {"1 y
  yinrange =: ((1 { x) >: (1 {"1 y)) *. (1 { x) <: (3 {"1 y)

  (xmatches *. yinrange) +. ymatches *. xinrange
)






overlaps =: 4 : 0
  NB.  aX aY overlaps sX sY eX eY
  NB.  returns if point a is on the line from s to e
  NB.  y is a matrix of those, actually
  xmatches =: (*/"1) (0 { x) = 0 2 {"1 y
  xinrange =: ((0 { x) >: (0 {"1 y)) *. (0 { x) <: (2 {"1 y)

  ymatches =: (*."1) (1 { x) = 1 3 {"1 y
  yinrange =: ((1 { x) >: (1 {"1 y)) *. (1 { x) <: (3 {"1 y)

  (xmatches *. yinrange) +. ymatches *. xinrange
)
   




                  
   2 9 overlaps d
1 0
1 0

0 0
0 0

0 0
0 0

0 0
0 0

0 0
0 0

0 0
0 0

1 0
1 0

0 0
0 0

0 0
0 0

0 0
0 0
   xmatches
0 0 0 1 0 0 0 0 0 0
   xinrange
1 0 0 1 0 0 1 0 1 0
   ymatches
1 0
1 0

0 0
0 0

0 0
0 0

0 0
0 0

0 0
0 0

0 0
0 0

1 0
1 0

0 0
0 0

0 0
0 0

0 0
0 0
   
overlaps =: 4 : 0
  NB.  aX aY overlaps sX sY eX eY
  NB.  returns if point a is on the line from s to e
  NB.  y is a matrix of those, actually
  xmatches =: (*./"1) (0 { x) = 0 2 {"1 y
  xinrange =: ((0 { x) >: (0 {"1 y)) *. (0 { x) <: (2 {"1 y)

  ymatches =: (*./"1) (1 { x) = 1 3 {"1 y
  yinrange =: ((1 { x) >: (1 {"1 y)) *. (1 { x) <: (3 {"1 y)

  (xmatches *. yinrange) +. ymatches *. xinrange
)






overlaps =: 4 : 0
  NB.  aX aY overlaps sX sY eX eY
  NB.  returns if point a is on the line from s to e
  NB.  y is a matrix of those, actually
  xmatches =: (*./"1) (0 { x) = 0 2 {"1 y
  xinrange =: ((0 { x) >: (0 {"1 y)) *. (0 { x) <: (2 {"1 y)   

  ymatches =: (*./"1) (1 { x) = 1 3 {"1 y
  yinrange =: ((1 { x) >: (1 {"1 y)) *. (1 { x) <: (3 {"1 y)

  (xmatches *. yinrange) +. ymatches *. xinrange
)





                  
   2 9 overlaps d
1 0 0 0 0 0 1 0 0 0
   (2 2 $ 2 9 3 9) overlaps d
|length error: overlaps
|   xmatches=:(*./"1)(0{x)    =0 2{"1 y
   (2 2 $ 2 9 3 9)
2 9
3 9
   (2 2 $ 2 9 3 9) overlaps/ d
|length error: overlaps
|   xmatches=:(*./"1)(0{x)    =0 2{"1 y
   (2 2 $ 2 9 3 9) overlaps d
answer05a =: 3 : 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
    
)
answer05a t


|length error: overlaps
|   xmatches=:(*./"1)(0{x)    =0 2{"1 y
      0 5
3 9
0 2
1 3
         
   t
0,9 -> 5,9
8,0 -> 0,8
9,4 -> 3,4
2,2 -> 2,1
7,0 -> 7,4
6,4 -> 2,0
0,9 -> 2,9
3,4 -> 1,4
0,0 -> 8,8
5,5 -> 8,2

   h_endpoints
0 5
3 9
0 2
1 3
   
answer05a =: 3 : 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

)
answer05a t



answer05a =: 3 : 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of    the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

)
answer05a t


   9 4 9 4
         
   h_endpoints
0 5
3 9
0 2
1 3
   -"1 h_endpoints
 0 _5
_3 _9
 0 _2
_1 _3
   |. h_endpoints
1 3
0 2
3 9
0 5
    |: h_endpoints
0 3 0 1
5 9 2 3
   |. |: h_endpoints
5 9 2 3
0 3 0 1
   -/ |. |: h_endpoints
5 6 2 2
   i. each 1 + -/ |. |: h_endpoints
+---------+-----------+---+---+
|0 1 2 3 4|0 1 2 3 4 5|0 1|0 1|
+---------+-----------+---+---+
   h_y + i. each -/ |. |: h_endpoints
|domain error
|   h_y    +i.each-/|.|:h_endpoints
   h_y
9 4 9 4
   h_y + each i. each -/ |. |: h_endpoints
+-------------+-----------+----+---+
|9 10 11 12 13|4 5 6 7 8 9|9 10|4 5|
+-------------+-----------+----+---+
   (0 {"1 h_endpoints) + each i. each -/ |. |: h_endpoints
+---------+-----------+---+---+
|0 1 2 3 4|3 4 5 6 7 8|0 1|1 2|
+---------+-----------+---+---+
   (0 {"1 h_endpoints) + each i. each 1 + -/ |. |: h_endpoints
      (0 {"1 h_endpoints) + each i. each 1 + -/ |. |: h_endpoints

+-----------+-------------+-----+-----+
|0 1 2 3 4 5|3 4 5 6 7 8 9|0 1 2|1 2 3|
+-----------+-------------+-----+-----+
   nn =: (0 {"1 h_endpoints) + each i. each 1 + -/ |. |: h_endpoints

      nn
+-----------+-------------+-----+-----+
|0 1 2 3 4 5|3 4 5 6 7 8 9|0 1 2|1 2 3|
+-----------+-------------+-----+-----+
   1 2 3 4 ,/ each nn
+-------------+---------------+-------+-------+
|1 0 1 2 3 4 5|2 3 4 5 6 7 8 9|3 0 1 2|4 1 2 3|
+-------------+---------------+-------+-------+
   1 2 3 4 ,./ each nn
+---+---+---+---+
|1 0|2 3|3 0|4 1|
|1 1|2 4|3 1|4 2|
|1 2|2 5|3 2|4 3|
|1 3|2 6|   |   |
|1 4|2 7|   |   |
|1 5|2 8|   |   |
|   |2 9|   |   |
+---+---+---+---+
   1 2 3 4 ,./~ each nn
+---+---+---+---+
|0 1|3 2|0 3|1 4|
|1 1|4 2|1 3|2 4|
|2 1|5 2|2 3|3 4|
|3 1|6 2|   |   |
|4 1|7 2|   |   |
|5 1|8 2|   |   |
|   |9 2|   |   |
+---+---+---+---+
   v_x
2 7
   h_y
9 4 9 4
   h_y ,./~ each nn
+---+---+---+---+
|0 9|3 4|0 9|1 4|
|1 9|4 4|1 9|2 4|
|2 9|5 4|2 9|3 4|
|3 9|6 4|   |   |
|4 9|7 4|   |   |
|5 9|8 4|   |   |
|   |9 4|   |   |
+---+---+---+---+
   1 (h_y ,./~ each nn) { 9 9 $ 0
|length error
|   1(h_y,./~each nn)    {9 9$0
   > h_y ,./~ each nn
0 9
1 9
2 9
3 9
4 9
5 9
0 0

3 4
4 4
5 4
6 4
7 4
8 4
9 4

0 9
1 9
2 9
0 0
0 0
0 0
0 0

1 4
2 4
3 4
0 0
0 0
0 0
0 0
   , each h_y ,./~ each nn
+-----------------------+---------------------------+-----------+-----------+
|0 9 1 9 2 9 3 9 4 9 5 9|3 4 4 4 5 4 6 4 7 4 8 4 9 4|0 9 1 9 2 9|1 4 2 4 3 4|
+-----------------------+---------------------------+-----------+-----------+
   > , each h_y ,./~ each nn
0 9 1 9 2 9 3 9 4 9 5 9 0 0
3 4 4 4 5 4 6 4 7 4 8 4 9 4
0 9 1 9 2 9 0 0 0 0 0 0 0 0
1 4 2 4 3 4 0 0 0 0 0 0 0 0
   > each , each h_y ,./~ each nn
+-----------------------+---------------------------+-----------+-----------+
|0 9 1 9 2 9 3 9 4 9 5 9|3 4 4 4 5 4 6 4 7 4 8 4 9 4|0 9 1 9 2 9|1 4 2 4 3 4|
+-----------------------+---------------------------+-----------+-----------+
   , each , each h_y ,./~ each nn
+-----------------------+---------------------------+-----------+-----------+
|0 9 1 9 2 9 3 9 4 9 5 9|3 4 4 4 5 4 6 4 7 4 8 4 9 4|0 9 1 9 2 9|1 4 2 4 3 4|
+-----------------------+---------------------------+-----------+-----------+
   2 </ i. 16
0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1
   2 +/ i. 16
2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
   2 ,/ i. 16
2 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
   2&,/ i. 16
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 15
   2&</ i. 16
0
   ;/ i. 16
+-+-+-+-+-+-+-+-+-+-+--+--+--+--+--+--+
|0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|
+-+-+-+-+-+-+-+-+-+-+--+--+--+--+--+--+
   2 ;/ i. 16
+-+-------------------------------------+
|2|0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15|
+-+-------------------------------------+
   ;/ i. 16
+-+-+-+-+-+-+-+-+-+-+--+--+--+--+--+--+
|0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|
+-+-+-+-+-+-+-+-+-+-+--+--+--+--+--+--+
   ;/ 2 8 $ i. 16
+---------------+---------------------+
|0 1 2 3 4 5 6 7|8 9 10 11 12 13 14 15|
+---------------+---------------------+
   ;/ 8 2 $ i. 16
+---+---+---+---+---+-----+-----+-----+
|0 1|2 3|4 5|6 7|8 9|10 11|12 13|14 15|
+---+---+---+---+---+-----+-----+-----+
   _2 </ i. 16
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
   _2 </. i. 16
|length error
|   _2    </.i.16
   _2 <\. i. 16
+---------------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+-------------------------------+-------------------------------+---------------------...
|2 3 4 5 6 7 8 9 10 11 12 13 14 15|0 1 4 5 6 7 8 9 10 11 12 13 14 15|0 1 2 3 6 7 8 9 10 11 12 13 14 15|0 1 2 3 4 5 8 9 10 11 12 13 14 15|0 1 2 3 4 5 6 7 10 11 12 13 14 15|0 1 2 3 4 5 6 7 8 9 12 13 14 15|0 1 2 3 4 5 6 7 8 9 10 11 14 15|0 1 2 3 4 5 6 7 8 9 1...
+---------------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+-------------------------------+-------------------------------+---------------------...
   2 <\. i. 16
+---------------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+-----------------...
|2 3 4 5 6 7 8 9 10 11 12 13 14 15|0 3 4 5 6 7 8 9 10 11 12 13 14 15|0 1 4 5 6 7 8 9 10 11 12 13 14 15|0 1 2 5 6 7 8 9 10 11 12 13 14 15|0 1 2 3 6 7 8 9 10 11 12 13 14 15|0 1 2 3 4 7 8 9 10 11 12 13 14 15|0 1 2 3 4 5 8 9 10 11 12 13 14 15|0 1 2 3 4 5 6 9 1...
+---------------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+---------------------------------+-----------------...
   2 <\ i. 16
+---+---+---+---+---+---+---+---+---+----+-----+-----+-----+-----+-----+
|0 1|1 2|2 3|3 4|4 5|5 6|6 7|7 8|8 9|9 10|10 11|11 12|12 13|13 14|14 15|
+---+---+---+---+---+---+---+---+---+----+-----+-----+-----+-----+-----+
   _2 <\ i. 16
+---+---+---+---+---+-----+-----+-----+
|0 1|2 3|4 5|6 7|8 9|10 11|12 13|14 15|
+---+---+---+---+---+-----+-----+-----+
   1 (_2 <\ i. 16) } 16 16 $ 0
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
   
answer05a =: 3 : 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines
  i. each -/ |. |: h_endpoints
)
answer05a t



answer05a =: 3 : 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of t   he vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines
  i. each -/ |. |: h_endpoints
)
answer05a t


   +---------+-----------+---+---+
|0 1 2 3 4|0 1 2 3 4 5|0 1|0 1|
+---------+-----------+---+---+
         h_endpoints
0 5
3 9
0 2
1 3
   nn
+-----------+-------------+-----+-----+
|0 1 2 3 4 5|3 4 5 6 7 8 9|0 1 2|1 2 3|
+-----------+-------------+-----+-----+
      h_y ,./~ each nn

+---+---+---+---+
|0 9|3 4|0 9|1 4|
|1 9|4 4|1 9|2 4|
|2 9|5 4|2 9|3 4|
|3 9|6 4|   |   |
|4 9|7 4|   |   |
|5 9|8 4|   |   |
|   |9 4|   |   |
+---+---+---+---+
      
answer05a =: 3 : 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines
  h_y ,./~ each i. each -/ |. |: h_endpoints
)
answer05a t



answer05a =: 3 : 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords    of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines
  h_y ,./~ each i. each -/ |. |: h_endpoints
)
answer05a t


   +---+---+---+---+
|0 9|0 4|0 9|0 4|
|1 9|1 4|1 9|1 4|
|2 9|2 4|   |   |
|3 9|3 4|   |   |
|4 9|4 4|   |   |
|   |5 4|   |   |
+---+---+---+---+
         
answer05a =: 3 : 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =: h_y ,./~ each i. each -/ |. |: h_endpoints
  
  
)
answer05a t



answer05a =: 3 : 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines
   
  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =: h_y ,./~ each i. each -/ |. |: h_endpoints
  
  
)
answer05a t


   +---+---+---+---+
|0 9|0 4|0 9|0 4|
|1 9|1 4|1 9|1 4|
|2 9|2 4|   |   |
|3 9|3 4|   |   |
|4 9|4 4|   |   |
|   |5 4|   |   |
+---+---+---+---+
         boxed_coordlists
+---+---+---+---+
|0 9|0 4|0 9|0 4|
|1 9|1 4|1 9|1 4|
|2 9|2 4|   |   |
|3 9|3 4|   |   |
|4 9|4 4|   |   |
|   |5 4|   |   |
+---+---+---+---+
   , each boxed_coordlists
+-------------------+-----------------------+-------+-------+
|0 9 1 9 2 9 3 9 4 9|0 4 1 4 2 4 3 4 4 4 5 4|0 9 1 9|0 4 1 4|
+-------------------+-----------------------+-------+-------+
   2 <\ each , each boxed_coordlists
+-------------------------------------+---------------------------------------------+-------------+-------------+
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
||0 9|9 1|1 9|9 2|2 9|9 3|3 9|9 4|4 9|||0 4|4 1|1 4|4 2|2 4|4 3|3 4|4 4|4 4|4 5|5 4|||0 9|9 1|1 9|||0 4|4 1|1 4||
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
+-------------------------------------+---------------------------------------------+-------------+-------------+
   > 2 <\ each , each boxed_coordlists
+---+---+---+---+---+---+---+---+---+---+---+
|0 9|9 1|1 9|9 2|2 9|9 3|3 9|9 4|4 9|   |   |
+---+---+---+---+---+---+---+---+---+---+---+
|0 4|4 1|1 4|4 2|2 4|4 3|3 4|4 4|4 4|4 5|5 4|
+---+---+---+---+---+---+---+---+---+---+---+
|0 9|9 1|1 9|   |   |   |   |   |   |   |   |
+---+---+---+---+---+---+---+---+---+---+---+
|0 4|4 1|1 4|   |   |   |   |   |   |   |   |
+---+---+---+---+---+---+---+---+---+---+---+
   , > 2 <\ each , each boxed_coordlists
+---+---+---+---+---+---+---+---+---+++---+---+---+---+---+---+---+---+---+---+---+---+---+---+++++++++---+---+---+++++++++
|0 9|9 1|1 9|9 2|2 9|9 3|3 9|9 4|4 9|||0 4|4 1|1 4|4 2|2 4|4 3|3 4|4 4|4 4|4 5|5 4|0 9|9 1|1 9|||||||||0 4|4 1|1 4|||||||||
+---+---+---+---+---+---+---+---+---+++---+---+---+---+---+---+---+---+---+---+---+---+---+---+++++++++---+---+---+++++++++
   2 <\ each , each boxed_coordlists
+-------------------------------------+---------------------------------------------+-------------+-------------+
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
||0 9|9 1|1 9|9 2|2 9|9 3|3 9|9 4|4 9|||0 4|4 1|1 4|4 2|2 4|4 3|3 4|4 4|4 4|4 5|5 4|||0 9|9 1|1 9|||0 4|4 1|1 4||
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
+-------------------------------------+---------------------------------------------+-------------+-------------+
   |. 2 <\ each , each boxed_coordlists
+-------------+-------------+---------------------------------------------+-------------------------------------+
|+---+---+---+|+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+|
||0 4|4 1|1 4|||0 9|9 1|1 9|||0 4|4 1|1 4|4 2|2 4|4 3|3 4|4 4|4 4|4 5|5 4|||0 9|9 1|1 9|9 2|2 9|9 3|3 9|9 4|4 9||
|+---+---+---+|+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+|
+-------------+-------------+---------------------------------------------+-------------------------------------+
   |: 2 <\ each , each boxed_coordlists
+-------------------------------------+---------------------------------------------+-------------+-------------+
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
||0 9|9 1|1 9|9 2|2 9|9 3|3 9|9 4|4 9|||0 4|4 1|1 4|4 2|2 4|4 3|3 4|4 4|4 4|4 5|5 4|||0 9|9 1|1 9|||0 4|4 1|1 4||
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
+-------------------------------------+---------------------------------------------+-------------+-------------+
   2 <\ each , each boxed_coordlists
+-------------------------------------+---------------------------------------------+-------------+-------------+
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
||0 9|9 1|1 9|9 2|2 9|9 3|3 9|9 4|4 9|||0 4|4 1|1 4|4 2|2 4|4 3|3 4|4 4|4 4|4 5|5 4|||0 9|9 1|1 9|||0 4|4 1|1 4||
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
+-------------------------------------+---------------------------------------------+-------------+-------------+
   $ 2 <\ each , each boxed_coordlists
4
   , 2 <\ each , each boxed_coordlists
+-------------------------------------+---------------------------------------------+-------------+-------------+
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
||0 9|9 1|1 9|9 2|2 9|9 3|3 9|9 4|4 9|||0 4|4 1|1 4|4 2|2 4|4 3|3 4|4 4|4 4|4 5|5 4|||0 9|9 1|1 9|||0 4|4 1|1 4||
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
+-------------------------------------+---------------------------------------------+-------------+-------------+
   $ , 2 <\ each , each boxed_coordlists
4
   2 <\ each , each boxed_coordlists
+-------------------------------------+---------------------------------------------+-------------+-------------+
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
||0 9|9 1|1 9|9 2|2 9|9 3|3 9|9 4|4 9|||0 4|4 1|1 4|4 2|2 4|4 3|3 4|4 4|4 4|4 5|5 4|||0 9|9 1|1 9|||0 4|4 1|1 4||
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
+-------------------------------------+---------------------------------------------+-------------+-------------+
   $ 2 <\ each , each boxed_coordlists
4
   , 2 <\ each , each boxed_coordlists
+-------------------------------------+---------------------------------------------+-------------+-------------+
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
||0 9|9 1|1 9|9 2|2 9|9 3|3 9|9 4|4 9|||0 4|4 1|1 4|4 2|2 4|4 3|3 4|4 4|4 4|4 5|5 4|||0 9|9 1|1 9|||0 4|4 1|1 4||
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
+-------------------------------------+---------------------------------------------+-------------+-------------+
   ,/ , 2 <\ each , each boxed_coordlists
+-------------------------------------+---------------------------------------------+-------------+-------------+
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
||0 9|9 1|1 9|9 2|2 9|9 3|3 9|9 4|4 9|||0 4|4 1|1 4|4 2|2 4|4 3|3 4|4 4|4 4|4 5|5 4|||0 9|9 1|1 9|||0 4|4 1|1 4||
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
+-------------------------------------+---------------------------------------------+-------------+-------------+
   ,/ each , 2 <\ each , each boxed_coordlists
+-------------------------------------+---------------------------------------------+-------------+-------------+
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
||0 9|9 1|1 9|9 2|2 9|9 3|3 9|9 4|4 9|||0 4|4 1|1 4|4 2|2 4|4 3|3 4|4 4|4 4|4 5|5 4|||0 9|9 1|1 9|||0 4|4 1|1 4||
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
+-------------------------------------+---------------------------------------------+-------------+-------------+
   ; 2 <\ each , each boxed_coordlists
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|0 9|9 1|1 9|9 2|2 9|9 3|3 9|9 4|4 9|0 4|4 1|1 4|4 2|2 4|4 3|3 4|4 4|4 4|4 5|5 4|0 9|9 1|1 9|0 4|4 1|1 4|
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   1 (; 2 <\ each , each boxed_coordlists) } 10 10 $ 0
0 0 0 0 1 0 0 0 0 1
0 0 0 0 1 0 0 0 0 1
0 0 0 0 1 0 0 0 0 1
0 0 0 0 1 0 0 0 0 1
0 1 1 1 1 1 0 0 0 1
0 0 0 0 1 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 1 1 1 1 0 0 0 0 0
   
answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amend_coordlists =: ; 2 <\ each , each boxed_coordlists
  
  1 (amend_coordlists {) each board
  
)
answer05a t



answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines
   
  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amend_coordlists =: ; 2 <\ each , each boxed_coordlists
  
  1 (amend_coordlists {) each board
  
)
answer05a t


   |domain error: answer05a
|       answer05a t
         
answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amend_coordlists =: ; 2 <\ each , each boxed_coordlists
  
  1 (amend_coordlists {) each board
  
)
  10 answer05a t



answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vline   s

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amend_coordlists =: ; 2 <\ each , each boxed_coordlists
  
  1 (amend_coordlists {) each board
  
)
  10 answer05a t


   |syntax error: answer05a
|   1(    amend_coordlists{)each board
         
amendboard =: 4 : 0
  1 x } y
)


            
amendboard =: 4 : 0
  1 x } y
)


answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amend_coordlists =: ; 2 <\ each , each boxed_coordlists
  
  $ amend_coordinates amendboard/ board
  
)
10 answer05a t



amendboard =: 4 : 0
  1 x } y
)


answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
     v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amend_coordlists =: ; 2 <\ each , each boxed_coordlists
  
  $ amend_coordinates amendboard/ board
  
)
10 answer05a t


            |value error: amend_coordinates
|   $    amend_coordinates amendboard/board
         
answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amend_coordlists =: ; 2 <\ each , each boxed_coordlists
  
  $ amend_coordlists amendboard/ board
  
)
10 answer05a t



answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lin   es where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amend_coordlists =: ; 2 <\ each , each boxed_coordlists
  
  $ amend_coordlists amendboard/ board
  
)
10 answer05a t


   10 10
         
answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amend_coordlists =: ; 2 <\ each , each boxed_coordlists
  
  amend_coordlists amendboard/ board
  
)


            
10 answer05a t

   0 0 0 0 1 0 0 0 0 1
0 0 0 0 1 0 0 0 0 1
0 0 0 0 1 0 0 0 0 1
0 0 0 0 1 0 0 0 0 1
0 1 1 1 1 1 0 0 0 1
0 0 0 0 1 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 1 1 1 1 0 0 0 0 0
      
answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amend_coordlists =: ; 2 <\ each , each boxed_coordlists
  
  amend_coordlists amendboard/. board
  
)
10 answer05a t



answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordin   ate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amend_coordlists =: ; 2 <\ each , each boxed_coordlists
  
  amend_coordlists amendboard/. board
  
)
10 answer05a t


   |length error: answer05a
|   amend_coordlists     amendboard/.board
         XX =: (0 0) ; (0 1) ; (0 2)
   XX
+---+---+---+
|0 0|0 1|0 2|
+---+---+---+
   BB =: 4 4 $ 0
   1 XX { BB
|syntax error
|       1 XX{BB
   1 XX } BB
1 1 1 0
0 0 0 0
0 0 0 0
0 0 0 0
   1 XX }/ BB
1 1 1 0
0 0 0 0
0 0 0 0
0 0 0 0
   1 XX }"0 BB
|length error
|   1     XX}"0 BB
   1 XX }"0 1 BB
|length error
|   1     XX}"0 1 BB
   1 XX }/"0 BB
|length error
|   1     XX}/"0 BB
   1 2 3 +/ BB
1 1 1 1
1 1 1 1
1 1 1 1
1 1 1 1

2 2 2 2
2 2 2 2
2 2 2 2
2 2 2 2

3 3 3 3
3 3 3 3
3 3 3 3
3 3 3 3
   amb =: 4 : '1 x } y'
   (< 2 2) amb BB
0 0 0 0
0 0 0 0
0 0 1 0
0 0 0 0
   XX amb/ BB
1 1 1 0
0 0 0 0
0 0 0 0
0 0 0 0
   XX amb each BB
|length error
|   XX     amb each BB
   XX each amb BB
|domain error: each
|   XX     each amb BB
   XX amb/ BB
1 1 1 0
0 0 0 0
0 0 0 0
0 0 0 0
   XX amb BB
1 1 1 0
0 0 0 0
0 0 0 0
0 0 0 0
   (,XX) amb/ BB
1 1 1 0
0 0 0 0
0 0 0 0
0 0 0 0
   (,XX) amb\ BB
|domain error
|   (,XX)    amb\BB
   (XX) amb\ BB
|domain error
|   (XX)    amb\BB
   (0 { XX) amb BB
1 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
   (1 { XX) amb BB
0 1 0 0
0 0 0 0
0 0 0 0
0 0 0 0
   XX
+---+---+---+
|0 0|0 1|0 2|
+---+---+---+
   </XX
|domain error
|       </XX
   <XX
+-------------+
|+---+---+---+|
||0 0|0 1|0 2||
|+---+---+---+|
+-------------+
   < each XX
+-----+-----+-----+
|+---+|+---+|+---+|
||0 0|||0 1|||0 2||
|+---+|+---+|+---+|
+-----+-----+-----+
   (< each XX) amb/ BB
1 1 1 1
1 1 1 1
1 1 1 1
0 0 0 0
   amend_coordlists
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|0 9|9 1|1 9|9 2|2 9|9 3|3 9|9 4|4 9|0 4|4 1|1 4|4 2|2 4|4 3|3 4|4 4|4 4|4 5|5 4|0 9|9 1|1 9|0 4|4 1|1 4|
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   1 (10 10 $ 0) } each amend_coordlists
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|1 9|1 1|1 9|1 2|1 9|1 3|1 9|1 4|1 9|1 4|1 1|1 4|1 2|1 4|1 3|1 4|1 4|1 4|1 5|1 4|1 9|1 1|1 9|1 4|1 1|1 4|
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   (10 10 $ 0) } each amend_coordlists
|rank error
|       (10 10$0)}each amend_coordlists
   boxed_coordlists
+---+---+---+---+
|0 9|0 4|0 9|0 4|
|1 9|1 4|1 9|1 4|
|2 9|2 4|   |   |
|3 9|3 4|   |   |
|4 9|4 4|   |   |
|   |5 4|   |   |
+---+---+---+---+
   , each boxed_coordlists
+-------------------+-----------------------+-------+-------+
|0 9 1 9 2 9 3 9 4 9|0 4 1 4 2 4 3 4 4 4 5 4|0 9 1 9|0 4 1 4|
+-------------------+-----------------------+-------+-------+
   2 <\ , each boxed_coordlists
+---------------------------------------------+---------------------------------+-----------------+
|+-------------------+-----------------------+|+-----------------------+-------+|+-------+-------+|
||0 9 1 9 2 9 3 9 4 9|0 4 1 4 2 4 3 4 4 4 5 4|||0 4 1 4 2 4 3 4 4 4 5 4|0 9 1 9|||0 9 1 9|0 4 1 4||
|+-------------------+-----------------------+|+-----------------------+-------+|+-------+-------+|
+---------------------------------------------+---------------------------------+-----------------+
   2 <\ each , each boxed_coordlists
+-------------------------------------+---------------------------------------------+-------------+-------------+
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
||0 9|9 1|1 9|9 2|2 9|9 3|3 9|9 4|4 9|||0 4|4 1|1 4|4 2|2 4|4 3|3 4|4 4|4 4|4 5|5 4|||0 9|9 1|1 9|||0 4|4 1|1 4||
|+---+---+---+---+---+---+---+---+---+|+---+---+---+---+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
+-------------------------------------+---------------------------------------------+-------------+-------------+
   _2 <\ each , each boxed_coordlists
+---------------------+-------------------------+---------+---------+
|+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+|+---+---+|
||0 9|1 9|2 9|3 9|4 9|||0 4|1 4|2 4|3 4|4 4|5 4|||0 9|1 9|||0 4|1 4||
|+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+|+---+---+|
+---------------------+-------------------------+---------+---------+
   ; _2 <\ each , each boxed_coordlists
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|0 9|1 9|2 9|3 9|4 9|0 4|1 4|2 4|3 4|4 4|5 4|0 9|1 9|0 4|1 4|
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   > ; _2 <\ each , each boxed_coordlists
0 9
1 9
2 9
3 9
4 9
0 4
1 4
2 4
3 4
4 4
5 4
0 9
1 9
0 4
1 4
   ac =: > ; _2 <\ each , each boxed_coordlists
   amb =: 4 : 0 '(< x) } 10 10 $ 0'
amb =: 4 : 0 '(< x) } 10 10 $ 0'

amb =: 4 : 0 '(< x) } 10 10 $ 0'

2
)
|domain error
|   amb=:    4 :0'(< x) } 10 10 $ 0'
   amb =: 4 : '1 (< x) } (y,y) $ 0'
   ac
0 9
1 9
2 9
3 9
4 9
0 4
1 4
2 4
3 4
4 4
5 4
0 9
1 9
0 4
1 4
   ac amb/ 10
|index error: amb
|   1    (<x)}(y,y)$0
   ac +/ 2 2
 2  2
11 11

 3  3
11 11

 4  4
11 11

 5  5
11 11

 6  6
11 11

 2  2
 6  6

 3  3
 6  6

 4  4
 6  6

 5  5
 6  6

 6  6
 6  6

 7  7
 6  6

 2  2
11 11

 3  3
11 11

 2  2
 6  6

 3  3
 6  6
   ac
0 9
1 9
2 9
3 9
4 9
0 4
1 4
2 4
3 4
4 4
5 4
0 9
1 9
0 4
1 4
   $ ac
15 2
   amend_coordlists
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|0 9|9 1|1 9|9 2|2 9|9 3|3 9|9 4|4 9|0 4|4 1|1 4|4 2|2 4|4 3|3 4|4 4|4 4|4 5|5 4|0 9|9 1|1 9|0 4|4 1|1 4|
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   
answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  
  
  
)
10 answer05a t


      +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|0 9|1 9|2 9|3 9|4 9|0 4|1 4|2 4|3 4|4 4|5 4|0 9|1 9|0 4|1 4|
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
         
   amend_coordlists
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|0 9|1 9|2 9|3 9|4 9|0 4|1 4|2 4|3 4|4 4|5 4|0 9|1 9|0 4|1 4|
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
    1 {. amend_coordlists
+---+
|0 9|
+---+
   boxed_coordinates
|value error: boxed_coordinates
   boxed_coordlists
+---+---+---+---+
|0 9|0 4|0 9|0 4|
|1 9|1 4|1 9|1 4|
|2 9|2 4|   |   |
|3 9|3 4|   |   |
|4 9|4 4|   |   |
|   |5 4|   |   |
+---+---+---+---+
   , each boxed_coordlists
+-------------------+-----------------------+-------+-------+
|0 9 1 9 2 9 3 9 4 9|0 4 1 4 2 4 3 4 4 4 5 4|0 9 1 9|0 4 1 4|
+-------------------+-----------------------+-------+-------+
   _2 <\ each , each boxed_coordlists
+---------------------+-------------------------+---------+---------+
|+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+|+---+---+|
||0 9|1 9|2 9|3 9|4 9|||0 4|1 4|2 4|3 4|4 4|5 4|||0 9|1 9|||0 4|1 4||
|+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+|+---+---+|
+---------------------+-------------------------+---------+---------+
   (_2 <\ each , each boxed_coordlists) amb board
|index error: amb
|   1    (<x)}(y,y)$0
   (_2 <\ each , each boxed_coordlists) 
+---------------------+-------------------------+---------+---------+
|+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+|+---+---+|
||0 9|1 9|2 9|3 9|4 9|||0 4|1 4|2 4|3 4|4 4|5 4|||0 9|1 9|||0 4|1 4||
|+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+|+---+---+|
+---------------------+-------------------------+---------+---------+
   
amendboard =: 4 : 0
  1 x } (y,y) $ 0
)


            1 {. 
amendboard =: 4 : 0
  1 x } (y,y) $ 0
)


answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists)
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
)
10 answer05a t


1 {. 
amendboard =: 4 : 0
  1 x } (y,y) $ 0
)


answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
|syntax error
|       1{.
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists)
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
   )
10 answer05a t


            |syntax error: answer05a
|   amc=:_2<\each,each boxed_coordlists)
         
amendboard =: 4 : 0
  1 x } (y,y) $ 0
)


answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists)
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
)
10 answer05a t



amendboard =: 4 : 0
  1 x } (y,y) $ 0
)


answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2
   
  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists)
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
)
   10 answer05a t


         |syntax error: answer05a
|   amc=:_2<\each,each boxed_coordlists)
         
   10 answer05a t
|syntax error: answer05a
|   amc=:_2<\each,each boxed_coordlists)
      (_2 <\ each , each boxed_coordlists) 

+---------------------+-------------------------+---------+---------+
|+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+|+---+---+|
||0 9|1 9|2 9|3 9|4 9|||0 4|1 4|2 4|3 4|4 4|5 4|||0 9|1 9|||0 4|1 4||
|+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+|+---+---+|
+---------------------+-------------------------+---------+---------+
   _2 <\ each , each boxed_coordlists

+---------------------+-------------------------+---------+---------+
|+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+|+---+---+|
||0 9|1 9|2 9|3 9|4 9|||0 4|1 4|2 4|3 4|4 4|5 4|||0 9|1 9|||0 4|1 4||
|+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+|+---+---+|
+---------------------+-------------------------+---------+---------+
      
answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
)
10 answer05a t



answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore co   l 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
)
10 answer05a t


   +---------------------+-------------------------+---------+---------+
|+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+|+---+---+|
||0 9|1 9|2 9|3 9|4 9|||0 4|1 4|2 4|3 4|4 4|5 4|||0 9|1 9|||0 4|1 4||
|+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+|+---+---+|
+---------------------+-------------------------+---------+---------+
         
amendboard =: 4 : 0
  1 y } (x,x) $ 0
)


            
   amc
+---------------------+-------------------------+---------+---------+
|+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+|+---+---+|
||0 9|1 9|2 9|3 9|4 9|||0 4|1 4|2 4|3 4|4 4|5 4|||0 9|1 9|||0 4|1 4||
|+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+|+---+---+|
+---------------------+-------------------------+---------+---------+
   amendboard
4 : '  1 y } (x,x) $ 0'
   10 amendboard each amc
+-------------------+-------------------+-------------------+-------------------+
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
+-------------------+-------------------+-------------------+-------------------+
   11 amendboard each amc
+---------------------+---------------------+---------------------+---------------------+
|0 0 0 0 0 0 0 0 0 1 0|0 0 0 0 1 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1 0|0 0 0 0 1 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1 0|0 0 0 0 1 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1 0|0 0 0 0 1 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1 0|0 0 0 0 1 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1 0|0 0 0 0 1 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1 0|0 0 0 0 1 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 1 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0 0|
+---------------------+---------------------+---------------------+---------------------+
   > 11 amendboard each amc
0 0 0 0 0 0 0 0 0 1 0
0 0 0 0 0 0 0 0 0 1 0
0 0 0 0 0 0 0 0 0 1 0
0 0 0 0 0 0 0 0 0 1 0
0 0 0 0 0 0 0 0 0 1 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0

0 0 0 0 1 0 0 0 0 0 0
0 0 0 0 1 0 0 0 0 0 0
0 0 0 0 1 0 0 0 0 0 0
0 0 0 0 1 0 0 0 0 0 0
0 0 0 0 1 0 0 0 0 0 0
0 0 0 0 1 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0

0 0 0 0 0 0 0 0 0 1 0
0 0 0 0 0 0 0 0 0 1 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0

0 0 0 0 1 0 0 0 0 0 0
0 0 0 0 1 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
   +/ > 11 amendboard each amc
0 0 0 0 2 0 0 0 0 2 0
0 0 0 0 2 0 0 0 0 2 0
0 0 0 0 1 0 0 0 0 1 0
0 0 0 0 1 0 0 0 0 1 0
0 0 0 0 1 0 0 0 0 1 0
0 0 0 0 1 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0
   1 (<2 3) } 4 4 $ 0
0 0 0 0
0 0 0 0
0 0 0 1
0 0 0 0
   
answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  |: +/ > x amendboard each amc
)
10 answer05a t



answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

     v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  |: +/ > x amendboard each amc
)
10 answer05a t


   0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
2 2 1 1 1 1 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
2 2 1 1 1 0 0 0 0 0
         amc
+---------------------+-------------------------+---------+---------+
|+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+|+---+---+|
||0 9|1 9|2 9|3 9|4 9|||0 4|1 4|2 4|3 4|4 4|5 4|||0 9|1 9|||0 4|1 4||
|+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+|+---+---+|
+---------------------+-------------------------+---------+---------+
   t
0,9 -> 5,9
8,0 -> 0,8
9,4 -> 3,4
2,2 -> 2,1
7,0 -> 7,4
6,4 -> 2,0
0,9 -> 2,9
3,4 -> 1,4
0,0 -> 8,8
5,5 -> 8,2

   
answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  x amendboard each amc
)
10 answer05a t



answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where t   he X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  x amendboard each amc
)
10 answer05a t


   +-------------------+-------------------+-------------------+-------------------+
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
+-------------------+-------------------+-------------------+-------------------+
         hlines
0 9 5 9
9 4 3 4
0 9 2 9
3 4 1 4
   amc
+---------------------+-------------------------+---------+---------+
|+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+|+---+---+|
||0 9|1 9|2 9|3 9|4 9|||0 4|1 4|2 4|3 4|4 4|5 4|||0 9|1 9|||0 4|1 4||
|+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+|+---+---+|
+---------------------+-------------------------+---------+---------+
   h_endpoints
0 5
3 9
0 2
1 3
   |: h_endpoints
0 3 0 1
5 9 2 3
   |. |: h_endpoints
5 9 2 3
0 3 0 1
   -/ |. |: h_endpoints
5 6 2 2
   1 + -/ |. |: h_endpoints
6 7 3 3
   i. each 1 + -/ |. |: h_endpoints
+-----------+-------------+-----+-----+
|0 1 2 3 4 5|0 1 2 3 4 5 6|0 1 2|0 1 2|
+-----------+-------------+-----+-----+
   h_y ,./~ each i. each 1 + -/ |. |: h_endpoints
+---+---+---+---+
|0 9|0 4|0 9|0 4|
|1 9|1 4|1 9|1 4|
|2 9|2 4|2 9|2 4|
|3 9|3 4|   |   |
|4 9|4 4|   |   |
|5 9|5 4|   |   |
|   |6 4|   |   |
+---+---+---+---+
   
answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each 1 + -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  x amendboard each amc
)
10 answer05a t



answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

     hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each 1 + -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  x amendboard each amc
)
10 answer05a t


   +-------------------+-------------------+-------------------+-------------------+
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
+-------------------+-------------------+-------------------+-------------------+
         
answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./ each i. each 1 + -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  x amendboard each amc
)
10 answer05a t



answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines
   
  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./ each i. each 1 + -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  x amendboard each amc
)
10 answer05a t


   +-------------------+-------------------+-------------------+-------------------+
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|1 1 1 1 1 1 1 0 0 0|0 0 0 0 0 0 0 0 0 0|1 1 1 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|1 1 1 1 1 1 0 0 0 0|0 0 0 0 0 0 0 0 0 0|1 1 1 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
+-------------------+-------------------+-------------------+-------------------+
         boxed_coordlists
+---+---+---+---+
|9 0|4 0|9 0|4 0|
|9 1|4 1|9 1|4 1|
|9 2|4 2|9 2|4 2|
|9 3|4 3|   |   |
|9 4|4 4|   |   |
|9 5|4 5|   |   |
|   |4 6|   |   |
+---+---+---+---+
   
answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each 1 + -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  x amendboard each amc
)
10 answer05a t



answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines
   
  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each 1 + -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  x amendboard each amc
)
10 answer05a t


   +-------------------+-------------------+-------------------+-------------------+
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
+-------------------+-------------------+-------------------+-------------------+
         
amendboard =: 4 : 0
  1 (|. y) } (x,x) $ 0
)


answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each 1 + -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  x amendboard each amc
)
10 answer05a t



amendboard =: 4 : 0
  1 (|. y) } (x,x) $ 0
)


answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
     
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each 1 + -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  x amendboard each amc
)
10 answer05a t


            +-------------------+-------------------+-------------------+-------------------+
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
+-------------------+-------------------+-------------------+-------------------+
         
amendboard =: 4 : 0
  1 (< ]: |. ]: > y) } (x,x) $ 0
)


answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each 1 + -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  x amendboard each amc
)
10 answer05a t



amendboard =: 4 : 0
  1 (< ]: |. ]: > y) } (x,x) $ 0
)


answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
     v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each 1 + -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  x amendboard each amc
)
10 answer05a t


|spelling error
|   1 (< ]: |. ]: > y) } (x,x) $ 0
|        ^
|   amendboard=:4     :0
            +-------------------+-------------------+-------------------+-------------------+
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
+-------------------+-------------------+-------------------+-------------------+
         
amendboard =: 4 : 0
  1 y } (x,x) $ 0
)


answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each 1 + -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  x amendboard each amc
)
10 answer05a t



amendboard =: 4 : 0
  1 y } (x,x) $ 0
)


answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

     v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each 1 + -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  x amendboard each amc
)
10 answer05a t


            +-------------------+-------------------+-------------------+-------------------+
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
+-------------------+-------------------+-------------------+-------------------+
         
amendboard =: 4 : 0
  1 y } (x,x) $ 0
)


answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each 1 + -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  x amendboard each amc
)
10 answer05a t


answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each 1 + -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  +/ > x amendboard each amc
)
10 answer05a t



amendboard =: 4 : 0
  1 y } (x,x) $ 0
)


answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2

  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
     NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines

  boxed_coordlists =:  h_y ,./~ each i. each 1 + -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  x amendboard each amc
)
10 answer05a t


answer05a =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
     clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d =: (lines, 4) $ ". eliminateLF clean_numbers

  vlines =: ((0 {"1 d) = (2 {"1 d)) # d
  NB. lines where the X coordinate stays the same,
  NB. therefore col 0 == col 2
   
  hlines =: ((1 {"1 d) = (3 {"1 d)) # d

  h_endpoints =: (/:"1)~ 0 2 {"1 hlines
  NB. endpoints of the horizontal lines, sorted
  
  v_endpoints =: (/:"1)~ 1 3 {"1 vlines

  v_x =: 0{"1 vlines
  NB. x coords of the vertical lines

  h_y =: 1{"1 hlines
  NB. y coords of the horiz lines
   
  boxed_coordlists =:  h_y ,./~ each i. each 1 + -/ |. |: h_endpoints
  amc =: _2 <\ each , each boxed_coordlists
  NB. amend_coordlists =: ; _2 <\ each , each boxed_coordlists
  +/ > x amendboard each amc
)
10 answer05a t


   +-------------------+-------------------+-------------------+-------------------+
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
+-------------------+-------------------+-------------------+-------------------+

0 0 0 0 2 0 0 0 0 2
0 0 0 0 2 0 0 0 0 2
0 0 0 0 2 0 0 0 0 2
0 0 0 0 1 0 0 0 0 1
0 0 0 0 1 0 0 0 0 1
0 0 0 0 1 0 0 0 0 1
0 0 0 0 1 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0

                     0 0 0 0 2 0 0 0 0 2
0 0 0 0 2 0 0 0 0 2
   vlines
2 2 2 1
7 0 7 4
   hlines
0 9 5 9
9 4 3 4
0 9 2 9
3 4 1 4
   d
0 9 5 9
8 0 0 8
9 4 3 4
2 2 2 1
7 0 7 4
6 4 2 0
0 9 2 9
3 4 1 4
0 0 8 8
5 5 8 2
   h_endpoints
0 5
3 9
0 2
1 3
   d
0 9 5 9
8 0 0 8
9 4 3 4
2 2 2 1
7 0 7 4
6 4 2 0
0 9 2 9
3 4 1 4
0 0 8 8
5 5 8 2
   'foo bar' =. 1 2
   foo
1
   bar
2
   1 4 { |. i. 10
8 5
   2 ,: i. 4
2 2 2 2
0 1 2 3
   2 ,:~ i. 4
0 1 2 3
2 2 2 2
   |: 2 ,:~ i. 4
0 2
1 2
2 2
3 2
   , 2 ,:~ i. 4
0 1 2 3 2 2 2 2
   2 ,:~ i. 4
0 1 2 3
2 2 2 2
   2 ,.~ i. 4
0 2
1 2
2 2
3 2
   2 </ , 2 ,.~ i. 4
0 0 0 0 0 0 1 0
   2 ,.~ i. 4
0 2
1 2
2 2
3 2
   , 2 ,.~ i. 4
0 2 1 2 2 2 3 2
   2 <\ , 2 ,.~ i. 4
+---+---+---+---+---+---+---+
|0 2|2 1|1 2|2 2|2 2|2 3|3 2|
+---+---+---+---+---+---+---+
   _2 <\ , 2 ,.~ i. 4
+---+---+---+---+
|0 2|1 2|2 2|3 2|
+---+---+---+---+
   1 (< 0 0) } 3 3 $ 0
1 0 0
0 0 0
0 0 0
   1 (< 1 0) } 3 3 $ 0
0 0 0
1 0 0
0 0 0
   1 (< 2 0) } 3 3 $ 0
0 0 0
0 0 0
1 0 0
   1 (< 2 1) } 3 3 $ 0
0 0 0
0 0 0
0 1 0
   1 }"1 3 3 i. 4
1
   i. 4
0 1 2 3
   3 3 $ i. 4
0 1 2
3 0 1
2 3 0
   i. 3 3
0 1 2
3 4 5
6 7 8
   1 { i. 3 3
3 4 5
   1 {"1 i. 3 3
1 4 7
   1 {"1 i. 4 4
1 5 9 13
   i. 4 4
 0  1  2  3
 4  5  6  7
 8  9 10 11
12 13 14 15
   1 0 3 2 }"1 i. 4 4
|rank error
|       1 0 3 2}"1 i.4 4
   1 0 3 2 {"1 i. 4 4
 1  0  3  2
 5  4  7  6
 9  8 11 10
13 12 15 14
   
gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =. 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     < ly ,.~ sx + i. 1 + ex
  elseif. (1 { y) = (3 { y)   NB. x coords equal
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
     < lx ,.  sy + i. 1 + ey
  end.
)



gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =. 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     < ly ,.~ sx + i. 1 + ex
  elseif. (1 { y) = (3 { y)   NB. x coords equal
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
        < lx ,.  sy + i. 1 + ey
  end.
)


|control error
|   [16]  end.
|   gchv=:3     :0
         
gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =. 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     < ly ,.~ sx + i. 1 + ex
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
     < lx ,.  sy + i. 1 + ey
  end.
)



gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =. 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     < ly ,.~ sx + i. 1 + ex
  elseif. (1 { y) = (3 { y   )   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
     < lx ,.  sy + i. 1 + ey
  end.
)


         
   t
0,9 -> 5,9
8,0 -> 0,8
9,4 -> 3,4
2,2 -> 2,1
7,0 -> 7,4
6,4 -> 2,0
0,9 -> 2,9
3,4 -> 1,4
0,0 -> 8,8
5,5 -> 8,2

   gchv 9 0 9 5
+---+
|0 9|
|1 9|
|2 9|
|3 9|
|4 9|
|5 9|
+---+
   gchv 9 0 9 3
+---+
|0 9|
|1 9|
|2 9|
|3 9|
+---+
   2 <\ i. 14
+---+---+---+---+---+---+---+---+---+----+-----+-----+-----+
|0 1|1 2|2 3|3 4|4 5|5 6|6 7|7 8|8 9|9 10|10 11|11 12|12 13|
+---+---+---+---+---+---+---+---+---+----+-----+-----+-----+
   _2 <\ i. 14
+---+---+---+---+---+-----+-----+
|0 1|2 3|4 5|6 7|8 9|10 11|12 13|
+---+---+---+---+---+-----+-----+
   
gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =. 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     < ly ,.~ sx + i. 1 + ex
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
     _2 <\ , lx ,.  sy + i. 1 + ey
  end.
)




gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =. 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     < ly ,.~ sx + i. 1 + ex
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
        _2 <\ , lx ,.  sy + i. 1 + ey
  end.
)



            
   gchv 9 0 9 3
+---+
|0 9|
|1 9|
|2 9|
|3 9|
+---+
   gchv 9 0 9 3
gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =. 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     cm =. ly ,.~ sx + i. 1 + ex
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
     cm =. lx ,.  sy + i. 1 + ey
  end.
  2 <\ , cm
)


gchv 9 0 9 3
gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =. 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     cm =. ly ,.~ sx + i. 1 + ex
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
+---+
|0 9|
|1 9|
|2 9|
|3 9|
+---+
     'sy ey' =. /:~ 0 2 { y
     cm =. lx ,.  sy + i. 1 + ey
  end.
  2 <\ , cm
)


            
   gchv 9 0 9 3
+---+---+---+---+---+---+---+
|0 9|9 1|1 9|9 2|2 9|9 3|3 9|
+---+---+---+---+---+---+---+
   
gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =. 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     cm =. ly ,. sx + i. 1 + ex
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
     cm =. lx ,.~  sy + i. 1 + ey
  end.
  2 <\ , cm
)



gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =. 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     cm =. ly ,. sx + i. 1 + ex
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
        cm =. lx ,.~  sy + i. 1 + ey
  end.
  2 <\ , cm
)


         
   gchv 9 0 9 3
+---+---+---+---+---+---+---+
|9 0|0 9|9 1|1 9|9 2|2 9|9 3|
+---+---+---+---+---+---+---+
   cm
|value error: cm
   
gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =: 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     cm =: ly ,.~ sx + i. 1 + ex
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
     cm =: lx ,.  sy + i. 1 + ey
  end.
)



gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB.    y coords equal
  do.
     ly =: 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     cm =: ly ,.~ sx + i. 1 + ex
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
     cm =: lx ,.  sy + i. 1 + ey
  end.
)


         
   gchv 9 0 9 3
0 9
1 9
2 9
3 9
   
gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =: 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     cm =: ly ,. sx + i. 1 + ex
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
     cm =: lx ,.~  sy + i. 1 + ey
  end.
)


            
   gchv 9 0 9 3
9 0
9 1
9 2
9 3
   gchv 9 0 9 5
9 0
9 1
9 2
9 3
9 4
9 5
   d
0 9 5 9
8 0 0 8
9 4 3 4
2 2 2 1
7 0 7 4
6 4 2 0
0 9 2 9
3 4 1 4
0 0 8 8
5 5 8 2
   
answer05a2 =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d_raw =: (lines, 4) $ ". eliminateLF clean_numbers

  d =: 1 0 3 2 {"1 d_raw
  NB. transposed, so the coords in each row are y1 x1 y2 x2
  
)



               
   answer05a2 t
|domain error: answer05a2
|       answer05a2 t
   t
0,9 -> 5,9
8,0 -> 0,8
9,4 -> 3,4
2,2 -> 2,1
7,0 -> 7,4
6,4 -> 2,0
0,9 -> 2,9
3,4 -> 1,4
0,0 -> 8,8
5,5 -> 8,2

   10 answer05a2 t
9 0 9 5
0 8 8 0
4 9 4 3
2 2 1 2
0 7 4 7
4 6 0 2
9 0 9 2
4 3 4 1
0 0 8 8
5 5 2 8
   gchv 0 0 8 8 
   d =: 10 answer05a2 t
   d
9 0 9 5
0 8 8 0
4 9 4 3
2 2 1 2
0 7 4 7
4 6 0 2
9 0 9 2
4 3 4 1
0 0 8 8
5 5 2 8
   gchv d
   gchv/"0 d
9 0 9 5
0 8 8 0
4 9 4 3
2 2 1 2
0 7 4 7
4 6 0 2
9 0 9 2
4 3 4 1
0 0 8 8
5 5 2 8
   gchv/"0 d
gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =: 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     cm =: ly ,. sx + i. 1 + ex
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
     cm =: lx ,.~  sy + i. 1 + ey
  end.
  2 <\, cm
)


gchv/"0 d
gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =: 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     cm =: ly ,. sx + i. 1 + ex
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
     cm =: lx ,.~  sy + i. 1 + ey
  end.
  2 <\, cm
)
9 0 9 5
0 8 8 0
4 9 4 3
2 2 1 2
0 7 4 7
4 6 0 2
9 0 9 2
4 3 4 1
0 0 8 8
5 5 2 8


            
   gchv 9 0 9 5
+---+---+---+---+---+---+---+---+---+---+---+
|9 0|0 9|9 1|1 9|9 2|2 9|9 3|3 9|9 4|4 9|9 5|
+---+---+---+---+---+---+---+---+---+---+---+
   cm
9 0
9 1
9 2
9 3
9 4
9 5
   , cm
9 0 9 1 9 2 9 3 9 4 9 5
   , cm
gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =: 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     cm =: ly ,. sx + i. 1 + ex
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
     cm =: lx ,.~  sy + i. 1 + ey
  end.
  _2 <\, cm
)


, cm
gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
9 0 9 1 9 2 9 3 9 4 9 5
     ly =: 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     cm =: ly ,. sx + i. 1 + ex
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
     cm =: lx ,.~  sy + i. 1 + ey
     end.
  _2 <\, cm
)


         
   gchv 9 0 9 5
+---+---+---+---+---+---+
|9 0|9 1|9 2|9 3|9 4|9 5|
+---+---+---+---+---+---+
   gchv 0 9 0 4
+---+---+---+---+---+---+----+----+----+----+
|0 4|0 5|0 6|0 7|0 8|0 9|0 10|0 11|0 12|0 13|
+---+---+---+---+---+---+----+----+----+----+
   gchv 9 5 9 0
+---+---+---+---+---+---+
|9 0|9 1|9 2|9 3|9 4|9 5|
+---+---+---+---+---+---+
   (i. 5) ,. 4
0 4
1 4
2 4
3 4
4 4
   , (i. 5) ,. 4
0 4 1 4 2 4 3 4 4 4
   _2 <\ , (i. 5) ,. 4
+---+---+---+---+---+
|0 4|1 4|2 4|3 4|4 4|
+---+---+---+---+---+
   
gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =: 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     cm =: ly ,. sx + i. 1 + ex
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
     cm =: (sy + i. 1 + ey) ,. lx
  end.
  _2 <\, cm
)



gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =: 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     cm =: ly ,. sx + i. 1 + ex
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y   
     cm =: (sy + i. 1 + ey) ,. lx
  end.
  _2 <\, cm
)


         gchv 9 5 9 0
+---+---+---+---+---+---+
|9 0|9 1|9 2|9 3|9 4|9 5|
+---+---+---+---+---+---+
   gchv 5 9 0 9
+---+---+---+---+---+---+
|0 9|1 9|2 9|3 9|4 9|5 9|
+---+---+---+---+---+---+
   gchv /"1 d
|domain error: gchv
|       gchv/"1 d
   </ d
0 0 0 0
   d
9 0 9 5
0 8 8 0
4 9 4 3
2 2 1 2
0 7 4 7
4 6 0 2
9 0 9 2
4 3 4 1
0 0 8 8
5 5 2 8
   _4 <\ , d
+-------+-------+-------+-------+-------+-------+-------+-------+-------+-------+
|9 0 9 5|0 8 8 0|4 9 4 3|2 2 1 2|0 7 4 7|4 6 0 2|9 0 9 2|4 3 4 1|0 0 8 8|5 5 2 8|
+-------+-------+-------+-------+-------+-------+-------+-------+-------+-------+
   gchv each _4 <\ , d
+-------------------------+-------------------------+--------------------------------------------+-------------+---------------------+---------------------+-------------+-----------------+-----------------+-----------------+
|+---+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+---+---+---+---+---+----+----+----+|+---+---+---+|+---+---+---+---+---+|+---+---+---+---+---+|+---+---+---+|+---+---+---+---+|+---+---+---+---+|+---+---+---+---+|
||9 0|9 1|9 2|9 3|9 4|9 5|||9 0|9 1|9 2|9 3|9 4|9 5|||4 3|4 4|4 5|4 6|4 7|4 8|4 9|4 10|4 11|4 12|||1 2|2 2|3 2|||0 7|1 7|2 7|3 7|4 7|||0 7|1 7|2 7|3 7|4 7|||9 0|9 1|9 2|||4 1|4 2|4 3|4 4|||4 1|4 2|4 3|4 4|||4 1|4 2|4 3|4 4||
|+---+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+---+---+---+---+---+----+----+----+|+---+---+---+|+---+---+---+---+---+|+---+---+---+---+---+|+---+---+---+|+---+---+---+---+|+---+---+---+---+|+---+---+---+---+|
+-------------------------+-------------------------+--------------------------------------------+-------------+---------------------+---------------------+-------------+-----------------+-----------------+-----------------+
   gchv each _4 <\ , d
gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =: 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     cm =: ly ,. sx + i. 1 + ex
     _2 <\, cm
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
     cm =: (sy + i. 1 + ey) ,. lx
     _2 <\, cm
  end.
)



overlaps =: 4 : 0
  NB.  aX aY overlaps sX sY eX eY
  NB.  returns if point a is on the line from s to e
  NB.  y is a matrix of those, actually
  xmatches =: (*./"1) (0 { x) = 0 2 {"1 y
  xinrange =: ((0 { x) >: (0 {"1 y)) *. (0 { x) <: (2 {"1 y)

  ymatches =: (*./"1) (1 { x) = 1 3 {"1 y
  yinrange =: ((1 { x) >: (1 {"1 y)) *. (1 { x) <: (3 {"1 y)

  (xmatches *. yinrange) +. ymatches *. xinrange
)





+-------------------------+-------------------------+--------------------------------------------+-------------+---------------------+---------------------+-------------+-----------------+-----------------+-----------------+
|+---+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+---+---+---+---+---+----+----+----+|+---+---+---+|+---+---+---+---+---+|+---+---+---+---+---+|+---+---+---+|+---+---+---+---+|+---+---+---+---+|+---+---+---+---+|
||9 0|9 1|9 2|9 3|9 4|9 5|||9 0|9 1|9 2|9 3|9 4|9 5|||4 3|4 4|4 5|4 6|4 7|4 8|4 9|4 10|4 11|4 12|||1 2|2 2|3 2|||0 7|1 7|2 7|3 7|4 7|||0 7|1 7|2 7|3 7|4 7|||9 0|9 1|9 2|||4 1|4 2|4 3|4 4|||4 1|4 2|4 3|4 4|||4 1|4 2|4 3|4 4||
|+---+---+---+---+---+---+|+---+---+---+---+---+---+|+---+---+---+---+---+---+---+----+----+----+|+---+---+---+|+---+---+---+---+---+|+---+---+---+---+---+|+---+---+---+|+---+---+---+---+|+---+---+---+---+|+---+---+---+---+|
+-------------------------+-------------------------+--------------------------------------------+-------------+---------------------+---------------------+-------------+-----------------+-----------------+-----------------+
                                 
   (< 1 2) = (< 1 2)
1
   (< 1 2) = (< 1 3)
0
   
answer05a2 =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d_raw =: (lines, 4) $ ". eliminateLF clean_numbers

  d =: 1 0 3 2 {"1 d_raw
  NB. transposed, so the coords in each row are y1 x1 y2 x2
  
  boxed_coordlists =: gchv each _4 <\ , d
  NB. apply gchv to each row of d, producing (boxed) list of boxed coordlists

  boxed_coordlists
)


NB.  alternate approach:
NB.  generate list of all coordinates in the matrix; match each against the
NB.  lines

gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =: 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     cm =: ly ,. sx + i. 1 + ex
     _2 <\, cm
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
     cm =: (sy + i. 1 + ey) ,. lx
     _2 <\, cm
  end.
)

10 answer05a2 t



answer05a2 =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d_raw =: (lines, 4) $ ". eliminateLF clean_numbers

  d =: 1 0 3 2 {"1 d_raw
  NB. transposed, so the coords in each row are y1 x1 y2 x2
  
  boxed_coordlists =: gchv each _4 <\ , d
  NB. apply gchv to each row of d, producing (boxed) list of boxed coordlists

  boxed_coordlists
)


NB.  alternate approach:
NB.  generate list of all coordinates in the matrix; match each against the   
NB.  lines

gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =: 0 { y
     NB. ly is the line's y coord
     'sx ex' =. /:~ 1 3 { y
     cm =: ly ,. sx + i. 1 + ex
     _2 <\, cm
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =. /:~ 0 2 { y
     cm =: (sy + i. 1 + ey) ,. lx
     _2 <\, cm
  end.
)

10 answer05a2 t


+-------------------------++--------------------------------------------+-------------+---------------------++-------------+-----------------+++
|+---+---+---+---+---+---+||+---+---+---+---+---+---+---+----+----+----+|+---+---+---+|+---+---+---+---+---+||+---+---+---+|+---+---+---+---+|||
||9 0|9 1|9 2|9 3|9 4|9 5||||4 3|4 4|4 5|4 6|4 7|4 8|4 9|4 10|4 11|4 12|||1 2|2 2|3 2|||0 7|1 7|2 7|3 7|4 7||||9 0|9 1|9 2|||4 1|4 2|4 3|4 4||||
|+---+---+---+---+---+---+||+---+---+---+---+---+---+---+----+----+----+|+---+---+---+|+---+---+---+---+---+||+---+---+---+|+---+---+---+---+|||
+-------------------------++--------------------------------------------+-------------+---------------------++-------------+-----------------+++
         bc =: 10 answer05a2 t
   
   bc
+-------------------------++--------------------------------------------+-------------+---------------------++-------------+-----------------+++
|+---+---+---+---+---+---+||+---+---+---+---+---+---+---+----+----+----+|+---+---+---+|+---+---+---+---+---+||+---+---+---+|+---+---+---+---+|||
||9 0|9 1|9 2|9 3|9 4|9 5||||4 3|4 4|4 5|4 6|4 7|4 8|4 9|4 10|4 11|4 12|||1 2|2 2|3 2|||0 7|1 7|2 7|3 7|4 7||||9 0|9 1|9 2|||4 1|4 2|4 3|4 4||||
|+---+---+---+---+---+---+||+---+---+---+---+---+---+---+----+----+----+|+---+---+---+|+---+---+---+---+---+||+---+---+---+|+---+---+---+---+|||
+-------------------------++--------------------------------------------+-------------+---------------------++-------------+-----------------+++
   ,/ bc
+-------------------------++--------------------------------------------+-------------+---------------------++-------------+-----------------+++
|+---+---+---+---+---+---+||+---+---+---+---+---+---+---+----+----+----+|+---+---+---+|+---+---+---+---+---+||+---+---+---+|+---+---+---+---+|||
||9 0|9 1|9 2|9 3|9 4|9 5||||4 3|4 4|4 5|4 6|4 7|4 8|4 9|4 10|4 11|4 12|||1 2|2 2|3 2|||0 7|1 7|2 7|3 7|4 7||||9 0|9 1|9 2|||4 1|4 2|4 3|4 4||||
|+---+---+---+---+---+---+||+---+---+---+---+---+---+---+----+----+----+|+---+---+---+|+---+---+---+---+---+||+---+---+---+|+---+---+---+---+|||
+-------------------------++--------------------------------------------+-------------+---------------------++-------------+-----------------+++
   > bc
+---+---+---+---+---+---+---+----+----+----+
|9 0|9 1|9 2|9 3|9 4|9 5|   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+

+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+

+---+---+---+---+---+---+---+----+----+----+
|4 3|4 4|4 5|4 6|4 7|4 8|4 9|4 10|4 11|4 12|
+---+---+---+---+---+---+---+----+----+----+

+---+---+---+---+---+---+---+----+----+----+
|1 2|2 2|3 2|   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+

+---+---+---+---+---+---+---+----+----+----+
|0 7|1 7|2 7|3 7|4 7|   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+

+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+

+---+---+---+---+---+---+---+----+----+----+
|9 0|9 1|9 2|   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+

+---+---+---+---+---+---+---+----+----+----+
|4 1|4 2|4 3|4 4|   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+

+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+

+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
   >/ bc
|domain error
|       >/bc
   >\ bc
...
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|9 0|9 1|9 2|9 3|9 4|9 5|   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|4 3|4 4|4 5|4 6|4 7|4 8|4 9|4 10|4 11|4 12|
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|1 2|2 2|3 2|   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|9 0|9 1|9 2|9 3|9 4|9 5|   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|4 3|4 4|4 5|4 6|4 7|4 8|4 9|4 10|4 11|4 12|
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|1 2|2 2|3 2|   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|0 7|1 7|2 7|3 7|4 7|   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|9 0|9 1|9 2|9 3|9 4|9 5|   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|4 3|4 4|4 5|4 6|4 7|4 8|4 9|4 10|4 11|4 12|
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|1 2|2 2|3 2|   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|0 7|1 7|2 7|3 7|4 7|   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|9 0|9 1|9 2|9 3|9 4|9 5|   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|4 3|4 4|4 5|4 6|4 7|4 8|4 9|4 10|4 11|4 12|
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|1 2|2 2|3 2|   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|0 7|1 7|2 7|3 7|4 7|   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|9 0|9 1|9 2|   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|9 0|9 1|9 2|9 3|9 4|9 5|   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|4 3|4 4|4 5|4 6|4 7|4 8|4 9|4 10|4 11|4 12|
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|1 2|2 2|3 2|   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|0 7|1 7|2 7|3 7|4 7|   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|9 0|9 1|9 2|   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|4 1|4 2|4 3|4 4|   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|9 0|9 1|9 2|9 3|9 4|9 5|   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|4 3|4 4|4 5|4 6|4 7|4 8|4 9|4 10|4 11|4 12|
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|1 2|2 2|3 2|   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|0 7|1 7|2 7|3 7|4 7|   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|9 0|9 1|9 2|   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|4 1|4 2|4 3|4 4|   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|9 0|9 1|9 2|9 3|9 4|9 5|   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|4 3|4 4|4 5|4 6|4 7|4 8|4 9|4 10|4 11|4 12|
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|1 2|2 2|3 2|   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|0 7|1 7|2 7|3 7|4 7|   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|9 0|9 1|9 2|   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|4 1|4 2|4 3|4 4|   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
+---+---+---+---+---+---+---+----+----+----+
|   |   |   |   |   |   |   |    |    |    |
+---+---+---+---+---+---+---+----+----+----+
   ,/ each bc
+-------------------------++--------------------------------------------+-------------+---------------------++-------------+-----------------+++
|+---+---+---+---+---+---+||+---+---+---+---+---+---+---+----+----+----+|+---+---+---+|+---+---+---+---+---+||+---+---+---+|+---+---+---+---+|||
||9 0|9 1|9 2|9 3|9 4|9 5||||4 3|4 4|4 5|4 6|4 7|4 8|4 9|4 10|4 11|4 12|||1 2|2 2|3 2|||0 7|1 7|2 7|3 7|4 7||||9 0|9 1|9 2|||4 1|4 2|4 3|4 4||||
|+---+---+---+---+---+---+||+---+---+---+---+---+---+---+----+----+----+|+---+---+---+|+---+---+---+---+---+||+---+---+---+|+---+---+---+---+|||
+-------------------------++--------------------------------------------+-------------+---------------------++-------------+-----------------+++
   bc
+-------------------------++--------------------------------------------+-------------+---------------------++-------------+-----------------+++
|+---+---+---+---+---+---+||+---+---+---+---+---+---+---+----+----+----+|+---+---+---+|+---+---+---+---+---+||+---+---+---+|+---+---+---+---+|||
||9 0|9 1|9 2|9 3|9 4|9 5||||4 3|4 4|4 5|4 6|4 7|4 8|4 9|4 10|4 11|4 12|||1 2|2 2|3 2|||0 7|1 7|2 7|3 7|4 7||||9 0|9 1|9 2|||4 1|4 2|4 3|4 4||||
|+---+---+---+---+---+---+||+---+---+---+---+---+---+---+----+----+----+|+---+---+---+|+---+---+---+---+---+||+---+---+---+|+---+---+---+---+|||
+-------------------------++--------------------------------------------+-------------+---------------------++-------------+-----------------+++
   $ each bc
+-+---+--+-+-+---+-+-+---+---+
|6|0 0|10|3|5|0 0|3|4|0 0|0 0|
+-+---+--+-+-+---+-+-+---+---+
   0 > each $ each bc
+-+---+-+-+-+---+-+-+---+---+
|0|0 0|0|0|0|0 0|0|0|0 0|0 0|
+-+---+-+-+-+---+-+-+---+---+
   # each bc
+-+-+--+-+-+-+-+-+-+-+
|6|0|10|3|5|0|3|4|0|0|
+-+-+--+-+-+-+-+-+-+-+
   0 < # each bc
|domain error
|   0    <#each bc
   0 < > # each bc
1 0 1 1 1 0 1 1 0 0
   (0 < > # each bc) $ bc
   (0 < > # each bc)
1 0 1 1 1 0 1 1 0 0
   (0 < > # each bc) # bc
+-------------------------+--------------------------------------------+-------------+---------------------+-------------+-----------------+
|+---+---+---+---+---+---+|+---+---+---+---+---+---+---+----+----+----+|+---+---+---+|+---+---+---+---+---+|+---+---+---+|+---+---+---+---+|
||9 0|9 1|9 2|9 3|9 4|9 5|||4 3|4 4|4 5|4 6|4 7|4 8|4 9|4 10|4 11|4 12|||1 2|2 2|3 2|||0 7|1 7|2 7|3 7|4 7|||9 0|9 1|9 2|||4 1|4 2|4 3|4 4||
|+---+---+---+---+---+---+|+---+---+---+---+---+---+---+----+----+----+|+---+---+---+|+---+---+---+---+---+|+---+---+---+|+---+---+---+---+|
+-------------------------+--------------------------------------------+-------------+---------------------+-------------+-----------------+
   
answer05a2 =: 4 : 0
  boardsize =: x
  board =: (x, x) $ 0
  clean_numbers =: (' -> '; ' ' ; ',' ; ' ') stringreplace y
  lines =: +/ LF = y
  d_raw =: (lines, 4) $ ". eliminateLF clean_numbers

  d =: 1 0 3 2 {"1 d_raw
  NB. transposed, so the coords in each row are y1 x1 y2 x2
  
  amcn =: gchv each _4 <\ , d
  NB. amend_coordinates_with_nulls
  NB. apply gchv to each row of d, producing (boxed) list of boxed coordlists
  NB. some elements of amcn are empty boxes.  Strip them out:
  amc =: (0 < > # each amc) # amc

  amc
)


            
   bc =: 10 answer05a2 t
   bc
+-------------------------+-----------------------------+-------------+-------------+
|+---+---+---+---+---+---+|+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
||0 9|1 9|2 9|3 9|4 9|5 9|||0 4|1 4|2 4|3 4|4 4|5 4|6 4|||0 9|1 9|2 9|||0 4|1 4|2 4||
|+---+---+---+---+---+---+|+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
+-------------------------+-----------------------------+-------------+-------------+
   10 amendboard each bc
+-------------------+-------------------+-------------------+-------------------+
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
+-------------------+-------------------+-------------------+-------------------+
   |. each 10 amendboard each bc
+-------------------+-------------------+-------------------+-------------------+
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|0 0 0 0 0 0 0 0 0 1|0 0 0 0 1 0 0 0 0 0|
+-------------------+-------------------+-------------------+-------------------+
   |: each 10 amendboard each bc
+-------------------+-------------------+-------------------+-------------------+
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|1 1 1 1 1 1 1 0 0 0|0 0 0 0 0 0 0 0 0 0|1 1 1 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
|1 1 1 1 1 1 0 0 0 0|0 0 0 0 0 0 0 0 0 0|1 1 1 0 0 0 0 0 0 0|0 0 0 0 0 0 0 0 0 0|
+-------------------+-------------------+-------------------+-------------------+
   > |: each 10 amendboard each bc
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
1 1 1 1 1 1 0 0 0 0

0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
1 1 1 1 1 1 1 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0

0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
1 1 1 0 0 0 0 0 0 0

0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
1 1 1 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
   +/ > |: each 10 amendboard each bc
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
2 2 2 1 1 1 1 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0
2 2 2 1 1 1 0 0 0 0
   bc
+-------------------------+-----------------------------+-------------+-------------+
|+---+---+---+---+---+---+|+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
||0 9|1 9|2 9|3 9|4 9|5 9|||0 4|1 4|2 4|3 4|4 4|5 4|6 4|||0 9|1 9|2 9|||0 4|1 4|2 4||
|+---+---+---+---+---+---+|+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
+-------------------------+-----------------------------+-------------+-------------+
   t
0,9 -> 5,9
8,0 -> 0,8
9,4 -> 3,4
2,2 -> 2,1
7,0 -> 7,4
6,4 -> 2,0
0,9 -> 2,9
3,4 -> 1,4
0,0 -> 8,8
5,5 -> 8,2

   d
9 0 9 5
0 8 8 0
4 9 4 3
2 2 1 2
0 7 4 7
4 6 0 2
9 0 9 2
4 3 4 1
0 0 8 8
5 5 2 8
   (0 {"1 d) = (2 {"1 d)
1 0 1 0 0 0 1 1 0 0
   ((0 {"1 d) = (2 {"1 d)) # d
9 0 9 5
4 9 4 3
9 0 9 2
4 3 4 1
   ((1 {"1 d) = (3 {"1 d)) # d
2 2 1 2
0 7 4 7
   amc
+-------------------------+-----------------------------+-------------+-------------+
|+---+---+---+---+---+---+|+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
||0 9|1 9|2 9|3 9|4 9|5 9|||0 4|1 4|2 4|3 4|4 4|5 4|6 4|||0 9|1 9|2 9|||0 4|1 4|2 4||
|+---+---+---+---+---+---+|+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
+-------------------------+-----------------------------+-------------+-------------+
   gchv 2 2 2 1
+---+---+---+
|2 1|2 2|2 3|
+---+---+---+
   gchv 7 0 7 4
+---+---+---+---+---+
|7 0|7 1|7 2|7 3|7 4|
+---+---+---+---+---+
   lx
7
   sy
|value error: sy
   ey
|value error: ey
   
gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =: 0 { y
     NB. ly is the line's y coord
     'sx ex' =: /:~ 1 3 { y
     cm =: ly ,. sx + i. 1 + ex
     _2 <\, cm
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
     'sy ey' =: /:~ 0 2 { y
     cm =: (sy + i. 1 + ey) ,. lx
     _2 <\, cm
  end.
)



gchv =: 3 : 0
  NB. "generate coords horizontal vertical"
  NB.  i.e. generate coords for a line if it's horiz or vert
  NB. given y = a b c d
  NB. figure out if it's a vert or horiz line,
  NB. and generate all the coords on the line

  if. (0 { y) = (2 { y)   NB. y coords equal
  do.
     ly =: 0 { y
     NB. ly is the line's y coord
     'sx ex' =: /:~ 1 3 { y
     cm =: ly ,. sx + i. 1 + ex
     _2 <\, cm
  elseif. (1 { y) = (3 { y)   NB. x coords equal
  do.
     lx =: 1 { y
        'sy ey' =: /:~ 0 2 { y
     cm =: (sy + i. 1 + ey) ,. lx
     _2 <\, cm
  end.
)


         
   ghcv 7 0 7 4
|value error: ghcv
|       ghcv 7 0 7 4
   gchv 7 0 7 4
+---+---+---+---+---+
|7 0|7 1|7 2|7 3|7 4|
+---+---+---+---+---+
   gchv 7 0 7 3
+---+---+---+---+
|7 0|7 1|7 2|7 3|
+---+---+---+---+
   gchv 7 0 7 2
+---+---+---+
|7 0|7 1|7 2|
+---+---+---+
   gchv 7 0 7 1
+---+---+
|7 0|7 1|
+---+---+
   d
9 0 9 5
0 8 8 0
4 9 4 3
2 2 1 2
0 7 4 7
4 6 0 2
9 0 9 2
4 3 4 1
0 0 8 8
5 5 2 8
   gchv 2 2 1 2
+---+---+---+
|1 2|2 2|3 2|
+---+---+---+
   gchv 2 2 2 1
+---+---+---+
|2 1|2 2|2 3|
+---+---+---+
   gchv 2 2 2 3
+---+---+---+---+
|2 2|2 3|2 4|2 5|
+---+---+---+---+
   gchv 9 0 9 5
+---+---+---+---+---+---+
|9 0|9 1|9 2|9 3|9 4|9 5|
+---+---+---+---+---+---+
   gchv 0 9 0 5
+---+---+---+---+---+----+----+----+----+----+
|0 5|0 6|0 7|0 8|0 9|0 10|0 11|0 12|0 13|0 14|
+---+---+---+---+---+----+----+----+----+----+
   lx
2
   ly
0
   sx
5
   es
|value error: es
   ec
|value error: ec
  ex
9
   ex + 1
10
   ex - sx
4
   1 + ex - sx
5
   i. 1 + ex - sx
0 1 2 3 4
   sx + i. 1 + ex - sx
5 6 7 8 9
   load '~/General/J/calendar.ijs'
   calendar 2021
...
|          |          |          |          |          |          |          |
-----------##################################################################|
|28        #1         |2         |3         |4         |5         |6         |
|          #          |          |          |          |          |          |
|          #          |          |          |          |          |          |
|          #          |          |          |          |          |          |
###########------------------------------------------------------------------|
|7         |8         |9         |10        |11        |12        |13        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|14        |15        |16        |17        |18        |19        |20        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|21        |22        |23        |24        |25        |26        |27        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
--------------------------------------------#################################|
|28        |29        |30        |31        #1         |2         |3         |
|          |          |          |          #          |          |          |
|          |          |          |          #          |          |          |
|          |          |          |          #          |          |          |
############################################---------------------------------|
|4         |5         |6         |7         |8         |9         |10        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|11        |12        |13        |14        |15        |16        |17        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|18        |19        |20        |21        |22        |23        |24        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
------------------------------------------------------------------###########|
|25        |26        |27        |28        |29        |30        #1         |
|          |          |          |          |          |          #          |
|          |          |          |          |          |          #          |
|          |          |          |          |          |          #          |
##################################################################-----------|
|2         |3         |4         |5         |6         |7         |8         |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|9         |10        |11        |12        |13        |14        |15        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|16        |17        |18        |19        |20        |21        |22        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|23        |24        |25        |26        |27        |28        |29        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
----------------------#######################################################|
|30        |31        #1         |2         |3         |4         |5         |
|          |          #          |          |          |          |          |
|          |          #          |          |          |          |          |
|          |          #          |          |          |          |          |
######################-------------------------------------------------------|
|6         |7         |8         |9         |10        |11        |12        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|13        |14        |15        |16        |17        |18        |19        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|20        |21        |22        |23        |24        |25        |26        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
--------------------------------------------#################################|
|27        |28        |29        |30        #1         |2         |3         |
|          |          |          |          #          |          |          |
|          |          |          |          #          |          |          |
|          |          |          |          #          |          |          |
############################################---------------------------------|
|4         |5         |6         |7         |8         |9         |10        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|11        |12        |13        |14        |15        |16        |17        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|18        |19        |20        |21        |22        |23        |24        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|25        |26        |27        |28        |29        |30        |31        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
#############################################################################|
|1         |2         |3         |4         |5         |6         |7         |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|8         |9         |10        |11        |12        |13        |14        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|15        |16        |17        |18        |19        |20        |21        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|22        |23        |24        |25        |26        |27        |28        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
---------------------------------############################################|
|29        |30        |31        #1         |2         |3         |4         |
|          |          |          #          |          |          |          |
|          |          |          #          |          |          |          |
|          |          |          #          |          |          |          |
#################################--------------------------------------------|
|5         |6         |7         |8         |9         |10        |11        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|12        |13        |14        |15        |16        |17        |18        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|19        |20        |21        |22        |23        |24        |25        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-------------------------------------------------------######################|
|26        |27        |28        |29        |30        #1         |2         |
|          |          |          |          |          #          |          |
|          |          |          |          |          #          |          |
|          |          |          |          |          #          |          |
#######################################################----------------------|
|3         |4         |5         |6         |7         |8         |9         |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|10        |11        |12        |13        |14        |15        |16        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|17        |18        |19        |20        |21        |22        |23        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|24        |25        |26        |27        |28        |29        |30        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------##################################################################|
|31        #1         |2         |3         |4         |5         |6         |
|          #          |          |          |          |          |          |
|          #          |          |          |          |          |          |
|          #          |          |          |          |          |          |
###########------------------------------------------------------------------|
|7         |8         |9         |10        |11        |12        |13        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|14        |15        |16        |17        |18        |19        |20        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|21        |22        |23        |24        |25        |26        |27        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
---------------------------------############################################|
|28        |29        |30        #1         |2         |3         |4         |
|          |          |          #          |          |          |          |
|          |          |          #          |          |          |          |
|          |          |          #          |          |          |          |
#################################--------------------------------------------|
|5         |6         |7         |8         |9         |10        |11        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|12        |13        |14        |15        |16        |17        |18        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
-----------------------------------------------------------------------------|
|19        |20        |21        |22        |23        |24        |25        |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
|          |          |          |          |          |          |          |
------------------------------------------------------------------###########|
|26        |27        |28        |29        |30        |31        #1         |
|          |          |          |          |          |          #          |
|          |          |          |          |          |          #          |
|          |          |          |          |          |          #          |
------------------------------------------------------------------------------
   calendar
3 : 0
  isleap =: leap y    NB. boolean: whether it's a leap year
  m =: (leap y) { 31 28 31 30 31 30 31 31 30 31 30 31 ,: 31 29 31 30 31 30 31 31 30 31 30 31
  NB. now we have the right list of month-lengths
  wd =: weekday y
  days =: 1 + ; i. each m        NB. days of year y, with last week NOT filled out
  foreweek =: (- wd) {. i. 32   NB. last few days of previous December
  yearlength =: 365 + isleap
  padded_days =: foreweek , days , 1 + i. 7 - 7 | wd + yearlength   NB. add in the december days
  NB. at this point we have the year array filled out right
  numweeks =: ( $padded_days ) % 7   NB. this should be an integer
  > (0 = 7 | $padded_days) { 'error' ; 'ok'
  days_array =: (numweeks, 7) $ padded_days
  NB. topweek: a row to prepend to days_array
  topweek =: _7 {. (- wd) }. i. 32
  NB. prepend topborder; rotate down by one; subtract from itself;
  NB. _7 means same month; anything esle: different month
  NB. convert to boolean; then NOT: 1 where we need border, 0, elsewhere
  topborder =: -. _7 = _1 }. (- 1&|.) ~ topweek , days_array
  topborder_chars =: ;/"1 topborder { '-#'

  leftborder =: -. _1 = _1 ,"1 (_1 }."1 days_array) - 1 }."1 days_array
  leftborder_chars =: ;/"1 leftborder { '|#'
  NB. ;/"1 days_array  NB. boxes days_array with one day per box, one row per week.
  NB. now I just have to convert it into characters and pad it correctly.
  NB. and do the month-to-month border logic correctly.

  NB. box up days_array one day per box, dimensions should be 53 by 7
  boxed_days =: ;/"1 days_array

  NB. convert each number to a string; so now it's a box of strings
  NB. Since some are 1-digt and some are 2-digit, the strings are different lengths
  boxed_char_days =: ": each boxed_days

  NB. pad each number out to 10 chars wide
  boxed_char_days =: (10 & right_pad) each boxed_char_days

  NB. add rows of spaces
  boxed_char_days =: (4 10 $ (30 $ ' ') ,~ ]) each boxed_char_days

  boxed_char_days =: leftborder_chars ,. each boxed_char_days
  boxed_char_days =: ((11 $ ]) each topborder_chars) , each boxed_char_days
  result =: ((265 77 $ ,  (0 2 1 3) |: > boxed_char_days) ,"1 '|') , '-'  
)
   10 answer05a2 t
+-------------------------+-----------------------------+-------------+-------------+
|+---+---+---+---+---+---+|+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
||0 9|1 9|2 9|3 9|4 9|5 9|||0 4|1 4|2 4|3 4|4 4|5 4|6 4|||0 9|1 9|2 9|||0 4|1 4|2 4||
|+---+---+---+---+---+---+|+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
+-------------------------+-----------------------------+-------------+-------------+
   10 answer05a2 t
+-------------------------+-----------------------------+-------------+-------------+
|+---+---+---+---+---+---+|+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
||0 9|1 9|2 9|3 9|4 9|5 9|||0 4|1 4|2 4|3 4|4 4|5 4|6 4|||0 9|1 9|2 9|||0 4|1 4|2 4||
|+---+---+---+---+---+---+|+---+---+---+---+---+---+---+|+---+---+---+|+---+---+---+|
+-------------------------+-----------------------------+-------------+-------------+
   exit''

Process J finished
